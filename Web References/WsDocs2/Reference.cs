//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Este código-fonte foi gerado automaticamente por Microsoft.VSDesigner, Versão 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CloudDocs.AssinadorDigital.WsDocs2 {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSDocs2Soap", Namespace="http://tempuri.org/")]
    public partial class WSDocs2 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthHeader authHeaderValueField;
        
        private System.Threading.SendOrPostCallback GravarDocumentosDigitalizadosComObsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GravarDocumentosDigitalizadosOperationCompleted;
        
        private System.Threading.SendOrPostCallback GravarDocumentosDigitalizadosComEventoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GravarDocumentosDigitalizadosComHTTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GravarFolderCloudDocsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GravarFolderCloudDocsComComplementoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GravarFolderCloudDocsIndice10OperationCompleted;
        
        private System.Threading.SendOrPostCallback GravarFolderCloudDocsComTabelaTemporalidadeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultarTipoDocumentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GravarFolderCloudDocsSemDocsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GravarDocumentosDigitalizadosBotaoDireitoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GravarFolderParaIndexacaoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CriarPastaOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscaTiposFolderesToTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscaTiposFolderesToTablePorUsuarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscaTiposFolderesDigitalizacaoOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscaClientesDoClientePorUsuarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscaClientesDoClienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscaEventosOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscaTiposDocumentosOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscarFoldesDocumentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscarFoldesDocumentoByPaiOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscaClientesOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscaClientesCloudDocsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidarUsuarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidarUsuarioADOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscarUsuarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscarUsuarioExternoOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscaIntegracaoVirtualOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscaConfiguracaoSistemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscaConfiguracaoClienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdicionarClassificacaoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AtualizaFolderProcessoOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaArquivoOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaArquivoFolderProcessoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GravarFolderProcessoOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscaLoteComProblemasOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscaFluxoProcessoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultarFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultarFoldersPorUsuarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultarDocumentosFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultarObservacoesFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultaChaveTransferenciaOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaTransferenciaArquivoOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscaDigitalizadoraOperationCompleted;
        
        private System.Threading.SendOrPostCallback InserirDigitalizadoraOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnviarArquivoTemporarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnviarArquivoDataCaptureOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscarObjetosClienteUsuarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscarObjetosClienteUsuarioPerfilOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscaSituacaoDocumentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaAtivacaoOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscarLoteIndexacaoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GravarFolderProcessoCQOperationCompleted;
        
        private System.Threading.SendOrPostCallback AtualizaSituacaoFolderProcessoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListaFoldersProcessoFiltroCQOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnviarArquivosOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaServidorExternoOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuscarMeusDocumetosOperationCompleted;
        
        private System.Threading.SendOrPostCallback CadastrarAlertaOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultaPermissoesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultarAssinaturasOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultarSolicitacaoDocumentoAbertaOperationCompleted;
        
        private System.Threading.SendOrPostCallback MultiplasAssinaturasOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultarAreasAssinaturasOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultarDocumentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CriarNovaVersaoAssinaturaOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultarClienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultarListaGenericaOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultarTabelaTemporaridadeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WSDocs2() {
            this.Url = global::CloudDocs.AssinadorDigital.Properties.Settings.Default.AlunoDigital_AssinadorDigital_WsDocs2_WSDocs2;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthHeader AuthHeaderValue {
            get {
                return this.authHeaderValueField;
            }
            set {
                this.authHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GravarDocumentosDigitalizadosComObsCompletedEventHandler GravarDocumentosDigitalizadosComObsCompleted;
        
        /// <remarks/>
        public event GravarDocumentosDigitalizadosCompletedEventHandler GravarDocumentosDigitalizadosCompleted;
        
        /// <remarks/>
        public event GravarDocumentosDigitalizadosComEventoCompletedEventHandler GravarDocumentosDigitalizadosComEventoCompleted;
        
        /// <remarks/>
        public event GravarDocumentosDigitalizadosComHTTPCompletedEventHandler GravarDocumentosDigitalizadosComHTTPCompleted;
        
        /// <remarks/>
        public event GravarFolderCloudDocsCompletedEventHandler GravarFolderCloudDocsCompleted;
        
        /// <remarks/>
        public event GravarFolderCloudDocsComComplementoCompletedEventHandler GravarFolderCloudDocsComComplementoCompleted;
        
        /// <remarks/>
        public event GravarFolderCloudDocsIndice10CompletedEventHandler GravarFolderCloudDocsIndice10Completed;
        
        /// <remarks/>
        public event GravarFolderCloudDocsComTabelaTemporalidadeCompletedEventHandler GravarFolderCloudDocsComTabelaTemporalidadeCompleted;
        
        /// <remarks/>
        public event ConsultarTipoDocumentoCompletedEventHandler ConsultarTipoDocumentoCompleted;
        
        /// <remarks/>
        public event GravarFolderCloudDocsSemDocsCompletedEventHandler GravarFolderCloudDocsSemDocsCompleted;
        
        /// <remarks/>
        public event GravarDocumentosDigitalizadosBotaoDireitoCompletedEventHandler GravarDocumentosDigitalizadosBotaoDireitoCompleted;
        
        /// <remarks/>
        public event GravarFolderParaIndexacaoCompletedEventHandler GravarFolderParaIndexacaoCompleted;
        
        /// <remarks/>
        public event CriarPastaCompletedEventHandler CriarPastaCompleted;
        
        /// <remarks/>
        public event BuscaTiposFolderesToTableCompletedEventHandler BuscaTiposFolderesToTableCompleted;
        
        /// <remarks/>
        public event BuscaTiposFolderesToTablePorUsuarioCompletedEventHandler BuscaTiposFolderesToTablePorUsuarioCompleted;
        
        /// <remarks/>
        public event BuscaTiposFolderesDigitalizacaoCompletedEventHandler BuscaTiposFolderesDigitalizacaoCompleted;
        
        /// <remarks/>
        public event BuscaClientesDoClientePorUsuarioCompletedEventHandler BuscaClientesDoClientePorUsuarioCompleted;
        
        /// <remarks/>
        public event BuscaClientesDoClienteCompletedEventHandler BuscaClientesDoClienteCompleted;
        
        /// <remarks/>
        public event BuscaEventosCompletedEventHandler BuscaEventosCompleted;
        
        /// <remarks/>
        public event BuscaTiposDocumentosCompletedEventHandler BuscaTiposDocumentosCompleted;
        
        /// <remarks/>
        public event BuscarFoldesDocumentoCompletedEventHandler BuscarFoldesDocumentoCompleted;
        
        /// <remarks/>
        public event BuscarFoldesDocumentoByPaiCompletedEventHandler BuscarFoldesDocumentoByPaiCompleted;
        
        /// <remarks/>
        public event BuscaClientesCompletedEventHandler BuscaClientesCompleted;
        
        /// <remarks/>
        public event BuscaClientesCloudDocsCompletedEventHandler BuscaClientesCloudDocsCompleted;
        
        /// <remarks/>
        public event ValidarUsuarioCompletedEventHandler ValidarUsuarioCompleted;
        
        /// <remarks/>
        public event ValidarUsuarioADCompletedEventHandler ValidarUsuarioADCompleted;
        
        /// <remarks/>
        public event BuscarUsuarioCompletedEventHandler BuscarUsuarioCompleted;
        
        /// <remarks/>
        public event BuscarUsuarioExternoCompletedEventHandler BuscarUsuarioExternoCompleted;
        
        /// <remarks/>
        public event BuscaIntegracaoVirtualCompletedEventHandler BuscaIntegracaoVirtualCompleted;
        
        /// <remarks/>
        public event BuscaConfiguracaoSistemaCompletedEventHandler BuscaConfiguracaoSistemaCompleted;
        
        /// <remarks/>
        public event BuscaConfiguracaoClienteCompletedEventHandler BuscaConfiguracaoClienteCompleted;
        
        /// <remarks/>
        public event AdicionarClassificacaoCompletedEventHandler AdicionarClassificacaoCompleted;
        
        /// <remarks/>
        public event AtualizaFolderProcessoCompletedEventHandler AtualizaFolderProcessoCompleted;
        
        /// <remarks/>
        public event VerificaArquivoCompletedEventHandler VerificaArquivoCompleted;
        
        /// <remarks/>
        public event VerificaArquivoFolderProcessoCompletedEventHandler VerificaArquivoFolderProcessoCompleted;
        
        /// <remarks/>
        public event GravarFolderProcessoCompletedEventHandler GravarFolderProcessoCompleted;
        
        /// <remarks/>
        public event BuscaLoteComProblemasCompletedEventHandler BuscaLoteComProblemasCompleted;
        
        /// <remarks/>
        public event BuscaFluxoProcessoCompletedEventHandler BuscaFluxoProcessoCompleted;
        
        /// <remarks/>
        public event ConsultarFoldersCompletedEventHandler ConsultarFoldersCompleted;
        
        /// <remarks/>
        public event ConsultarFoldersPorUsuarioCompletedEventHandler ConsultarFoldersPorUsuarioCompleted;
        
        /// <remarks/>
        public event ConsultarDocumentosFoldersCompletedEventHandler ConsultarDocumentosFoldersCompleted;
        
        /// <remarks/>
        public event ConsultarObservacoesFoldersCompletedEventHandler ConsultarObservacoesFoldersCompleted;
        
        /// <remarks/>
        public event ConsultaChaveTransferenciaCompletedEventHandler ConsultaChaveTransferenciaCompleted;
        
        /// <remarks/>
        public event VerificaTransferenciaArquivoCompletedEventHandler VerificaTransferenciaArquivoCompleted;
        
        /// <remarks/>
        public event BuscaDigitalizadoraCompletedEventHandler BuscaDigitalizadoraCompleted;
        
        /// <remarks/>
        public event InserirDigitalizadoraCompletedEventHandler InserirDigitalizadoraCompleted;
        
        /// <remarks/>
        public event EnviarArquivoTemporarioCompletedEventHandler EnviarArquivoTemporarioCompleted;
        
        /// <remarks/>
        public event EnviarArquivoDataCaptureCompletedEventHandler EnviarArquivoDataCaptureCompleted;
        
        /// <remarks/>
        public event BuscarObjetosClienteUsuarioCompletedEventHandler BuscarObjetosClienteUsuarioCompleted;
        
        /// <remarks/>
        public event BuscarObjetosClienteUsuarioPerfilCompletedEventHandler BuscarObjetosClienteUsuarioPerfilCompleted;
        
        /// <remarks/>
        public event BuscaSituacaoDocumentoCompletedEventHandler BuscaSituacaoDocumentoCompleted;
        
        /// <remarks/>
        public event VerificaAtivacaoCompletedEventHandler VerificaAtivacaoCompleted;
        
        /// <remarks/>
        public event BuscarLoteIndexacaoCompletedEventHandler BuscarLoteIndexacaoCompleted;
        
        /// <remarks/>
        public event GravarFolderProcessoCQCompletedEventHandler GravarFolderProcessoCQCompleted;
        
        /// <remarks/>
        public event AtualizaSituacaoFolderProcessoCompletedEventHandler AtualizaSituacaoFolderProcessoCompleted;
        
        /// <remarks/>
        public event ListaFoldersProcessoFiltroCQCompletedEventHandler ListaFoldersProcessoFiltroCQCompleted;
        
        /// <remarks/>
        public event EnviarArquivosCompletedEventHandler EnviarArquivosCompleted;
        
        /// <remarks/>
        public event VerificaServidorExternoCompletedEventHandler VerificaServidorExternoCompleted;
        
        /// <remarks/>
        public event BuscarMeusDocumetosCompletedEventHandler BuscarMeusDocumetosCompleted;
        
        /// <remarks/>
        public event CadastrarAlertaCompletedEventHandler CadastrarAlertaCompleted;
        
        /// <remarks/>
        public event ConsultaPermissoesCompletedEventHandler ConsultaPermissoesCompleted;
        
        /// <remarks/>
        public event ConsultarAssinaturasCompletedEventHandler ConsultarAssinaturasCompleted;
        
        /// <remarks/>
        public event ConsultarSolicitacaoDocumentoAbertaCompletedEventHandler ConsultarSolicitacaoDocumentoAbertaCompleted;
        
        /// <remarks/>
        public event MultiplasAssinaturasCompletedEventHandler MultiplasAssinaturasCompleted;
        
        /// <remarks/>
        public event ConsultarAreasAssinaturasCompletedEventHandler ConsultarAreasAssinaturasCompleted;
        
        /// <remarks/>
        public event ConsultarDocumentoCompletedEventHandler ConsultarDocumentoCompleted;
        
        /// <remarks/>
        public event CriarNovaVersaoAssinaturaCompletedEventHandler CriarNovaVersaoAssinaturaCompleted;
        
        /// <remarks/>
        public event ConsultarClienteCompletedEventHandler ConsultarClienteCompleted;
        
        /// <remarks/>
        public event ConsultarListaGenericaCompletedEventHandler ConsultarListaGenericaCompleted;
        
        /// <remarks/>
        public event ConsultarTabelaTemporaridadeCompletedEventHandler ConsultarTabelaTemporaridadeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GravarDocumentosDigitalizadosComObs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GravarDocumentosDigitalizadosComObs(
                    int ClienteId, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    string NomePasta, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    bool Criptografada, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    [System.Xml.Serialization.XmlArrayItemAttribute()] System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes) {
            this.Invoke("GravarDocumentosDigitalizadosComObs", new object[] {
                        ClienteId,
                        UsuarioId,
                        FolderId,
                        FolderIdPai,
                        NomePasta,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Documentos,
                        Tamanhos,
                        Classificacao,
                        NomeArquivo,
                        Criptografada,
                        ClienteDocumentoId,
                        iTotalPaginas,
                        DataVencimento,
                        EmailAvisoVencimento,
                        QtdeDiasAvisoVencimento,
                        Observacoes});
        }
        
        /// <remarks/>
        public void GravarDocumentosDigitalizadosComObsAsync(
                    int ClienteId, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    string NomePasta, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    bool Criptografada, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes) {
            this.GravarDocumentosDigitalizadosComObsAsync(ClienteId, UsuarioId, FolderId, FolderIdPai, NomePasta, TipoFolder, Indice01, Indice02, Indice03, Indice04, Documentos, Tamanhos, Classificacao, NomeArquivo, Criptografada, ClienteDocumentoId, iTotalPaginas, DataVencimento, EmailAvisoVencimento, QtdeDiasAvisoVencimento, Observacoes, null);
        }
        
        /// <remarks/>
        public void GravarDocumentosDigitalizadosComObsAsync(
                    int ClienteId, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    string NomePasta, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    bool Criptografada, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    object userState) {
            if ((this.GravarDocumentosDigitalizadosComObsOperationCompleted == null)) {
                this.GravarDocumentosDigitalizadosComObsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGravarDocumentosDigitalizadosComObsOperationCompleted);
            }
            this.InvokeAsync("GravarDocumentosDigitalizadosComObs", new object[] {
                        ClienteId,
                        UsuarioId,
                        FolderId,
                        FolderIdPai,
                        NomePasta,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Documentos,
                        Tamanhos,
                        Classificacao,
                        NomeArquivo,
                        Criptografada,
                        ClienteDocumentoId,
                        iTotalPaginas,
                        DataVencimento,
                        EmailAvisoVencimento,
                        QtdeDiasAvisoVencimento,
                        Observacoes}, this.GravarDocumentosDigitalizadosComObsOperationCompleted, userState);
        }
        
        private void OnGravarDocumentosDigitalizadosComObsOperationCompleted(object arg) {
            if ((this.GravarDocumentosDigitalizadosComObsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GravarDocumentosDigitalizadosComObsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GravarDocumentosDigitalizados", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GravarDocumentosDigitalizados(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    string NomePasta, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    bool Criptografada, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    [System.Xml.Serialization.XmlArrayItemAttribute()] System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer) {
            this.Invoke("GravarDocumentosDigitalizados", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        FolderId,
                        FolderIdPai,
                        NomePasta,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Documentos,
                        Tamanhos,
                        Classificacao,
                        NomeArquivo,
                        Criptografada,
                        ClienteDocumentoId,
                        iTotalPaginas,
                        DataVencimento,
                        EmailAvisoVencimento,
                        QtdeDiasAvisoVencimento,
                        Observacoes,
                        flpChaveTransferencia,
                        HashComputer});
        }
        
        /// <remarks/>
        public void GravarDocumentosDigitalizadosAsync(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    string NomePasta, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    bool Criptografada, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer) {
            this.GravarDocumentosDigitalizadosAsync(ClienteId, DataCapturaFolder, UsuarioId, FolderId, FolderIdPai, NomePasta, TipoFolder, Indice01, Indice02, Indice03, Indice04, Documentos, Tamanhos, Classificacao, NomeArquivo, Criptografada, ClienteDocumentoId, iTotalPaginas, DataVencimento, EmailAvisoVencimento, QtdeDiasAvisoVencimento, Observacoes, flpChaveTransferencia, HashComputer, null);
        }
        
        /// <remarks/>
        public void GravarDocumentosDigitalizadosAsync(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    string NomePasta, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    bool Criptografada, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    object userState) {
            if ((this.GravarDocumentosDigitalizadosOperationCompleted == null)) {
                this.GravarDocumentosDigitalizadosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGravarDocumentosDigitalizadosOperationCompleted);
            }
            this.InvokeAsync("GravarDocumentosDigitalizados", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        FolderId,
                        FolderIdPai,
                        NomePasta,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Documentos,
                        Tamanhos,
                        Classificacao,
                        NomeArquivo,
                        Criptografada,
                        ClienteDocumentoId,
                        iTotalPaginas,
                        DataVencimento,
                        EmailAvisoVencimento,
                        QtdeDiasAvisoVencimento,
                        Observacoes,
                        flpChaveTransferencia,
                        HashComputer}, this.GravarDocumentosDigitalizadosOperationCompleted, userState);
        }
        
        private void OnGravarDocumentosDigitalizadosOperationCompleted(object arg) {
            if ((this.GravarDocumentosDigitalizadosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GravarDocumentosDigitalizadosCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GravarDocumentosDigitalizadosComEvento", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GravarDocumentosDigitalizadosComEvento(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    string NomePasta, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    bool Criptografada, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    [System.Xml.Serialization.XmlArrayItemAttribute()] System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    int Evento) {
            this.Invoke("GravarDocumentosDigitalizadosComEvento", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        FolderId,
                        FolderIdPai,
                        NomePasta,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Documentos,
                        Tamanhos,
                        Classificacao,
                        NomeArquivo,
                        Criptografada,
                        ClienteDocumentoId,
                        iTotalPaginas,
                        DataVencimento,
                        EmailAvisoVencimento,
                        QtdeDiasAvisoVencimento,
                        Observacoes,
                        flpChaveTransferencia,
                        HashComputer,
                        Evento});
        }
        
        /// <remarks/>
        public void GravarDocumentosDigitalizadosComEventoAsync(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    string NomePasta, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    bool Criptografada, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    int Evento) {
            this.GravarDocumentosDigitalizadosComEventoAsync(ClienteId, DataCapturaFolder, UsuarioId, FolderId, FolderIdPai, NomePasta, TipoFolder, Indice01, Indice02, Indice03, Indice04, Documentos, Tamanhos, Classificacao, NomeArquivo, Criptografada, ClienteDocumentoId, iTotalPaginas, DataVencimento, EmailAvisoVencimento, QtdeDiasAvisoVencimento, Observacoes, flpChaveTransferencia, HashComputer, Evento, null);
        }
        
        /// <remarks/>
        public void GravarDocumentosDigitalizadosComEventoAsync(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    string NomePasta, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    bool Criptografada, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    int Evento, 
                    object userState) {
            if ((this.GravarDocumentosDigitalizadosComEventoOperationCompleted == null)) {
                this.GravarDocumentosDigitalizadosComEventoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGravarDocumentosDigitalizadosComEventoOperationCompleted);
            }
            this.InvokeAsync("GravarDocumentosDigitalizadosComEvento", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        FolderId,
                        FolderIdPai,
                        NomePasta,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Documentos,
                        Tamanhos,
                        Classificacao,
                        NomeArquivo,
                        Criptografada,
                        ClienteDocumentoId,
                        iTotalPaginas,
                        DataVencimento,
                        EmailAvisoVencimento,
                        QtdeDiasAvisoVencimento,
                        Observacoes,
                        flpChaveTransferencia,
                        HashComputer,
                        Evento}, this.GravarDocumentosDigitalizadosComEventoOperationCompleted, userState);
        }
        
        private void OnGravarDocumentosDigitalizadosComEventoOperationCompleted(object arg) {
            if ((this.GravarDocumentosDigitalizadosComEventoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GravarDocumentosDigitalizadosComEventoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GravarDocumentosDigitalizadosComHTTP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GravarDocumentosDigitalizadosComHTTP(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    string NomePasta, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    bool Criptografada, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    [System.Xml.Serialization.XmlArrayItemAttribute()] System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    int Evento) {
            this.Invoke("GravarDocumentosDigitalizadosComHTTP", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        FolderId,
                        FolderIdPai,
                        NomePasta,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Documentos,
                        Tamanhos,
                        Classificacao,
                        NomeArquivo,
                        Criptografada,
                        ClienteDocumentoId,
                        iTotalPaginas,
                        DataVencimento,
                        EmailAvisoVencimento,
                        QtdeDiasAvisoVencimento,
                        Observacoes,
                        flpChaveTransferencia,
                        HashComputer,
                        Evento});
        }
        
        /// <remarks/>
        public void GravarDocumentosDigitalizadosComHTTPAsync(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    string NomePasta, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    bool Criptografada, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    int Evento) {
            this.GravarDocumentosDigitalizadosComHTTPAsync(ClienteId, DataCapturaFolder, UsuarioId, FolderId, FolderIdPai, NomePasta, TipoFolder, Indice01, Indice02, Indice03, Indice04, Documentos, Tamanhos, Classificacao, NomeArquivo, Criptografada, ClienteDocumentoId, iTotalPaginas, DataVencimento, EmailAvisoVencimento, QtdeDiasAvisoVencimento, Observacoes, flpChaveTransferencia, HashComputer, Evento, null);
        }
        
        /// <remarks/>
        public void GravarDocumentosDigitalizadosComHTTPAsync(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    string NomePasta, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    bool Criptografada, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    int Evento, 
                    object userState) {
            if ((this.GravarDocumentosDigitalizadosComHTTPOperationCompleted == null)) {
                this.GravarDocumentosDigitalizadosComHTTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGravarDocumentosDigitalizadosComHTTPOperationCompleted);
            }
            this.InvokeAsync("GravarDocumentosDigitalizadosComHTTP", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        FolderId,
                        FolderIdPai,
                        NomePasta,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Documentos,
                        Tamanhos,
                        Classificacao,
                        NomeArquivo,
                        Criptografada,
                        ClienteDocumentoId,
                        iTotalPaginas,
                        DataVencimento,
                        EmailAvisoVencimento,
                        QtdeDiasAvisoVencimento,
                        Observacoes,
                        flpChaveTransferencia,
                        HashComputer,
                        Evento}, this.GravarDocumentosDigitalizadosComHTTPOperationCompleted, userState);
        }
        
        private void OnGravarDocumentosDigitalizadosComHTTPOperationCompleted(object arg) {
            if ((this.GravarDocumentosDigitalizadosComHTTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GravarDocumentosDigitalizadosComHTTPCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GravarFolderCloudDocs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GravarFolderCloudDocs(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string Indice05, 
                    string Indice06, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    bool Criptografada, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    [System.Xml.Serialization.XmlArrayItemAttribute()] System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    int Evento) {
            this.Invoke("GravarFolderCloudDocs", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        FolderId,
                        FolderIdPai,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Indice05,
                        Indice06,
                        Documentos,
                        Tamanhos,
                        Classificacao,
                        NomeArquivo,
                        Criptografada,
                        ClienteDocumentoId,
                        iTotalPaginas,
                        DataVencimento,
                        EmailAvisoVencimento,
                        QtdeDiasAvisoVencimento,
                        Observacoes,
                        flpChaveTransferencia,
                        HashComputer,
                        Evento});
        }
        
        /// <remarks/>
        public void GravarFolderCloudDocsAsync(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string Indice05, 
                    string Indice06, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    bool Criptografada, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    int Evento) {
            this.GravarFolderCloudDocsAsync(ClienteId, DataCapturaFolder, UsuarioId, FolderId, FolderIdPai, TipoFolder, Indice01, Indice02, Indice03, Indice04, Indice05, Indice06, Documentos, Tamanhos, Classificacao, NomeArquivo, Criptografada, ClienteDocumentoId, iTotalPaginas, DataVencimento, EmailAvisoVencimento, QtdeDiasAvisoVencimento, Observacoes, flpChaveTransferencia, HashComputer, Evento, null);
        }
        
        /// <remarks/>
        public void GravarFolderCloudDocsAsync(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string Indice05, 
                    string Indice06, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    bool Criptografada, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    int Evento, 
                    object userState) {
            if ((this.GravarFolderCloudDocsOperationCompleted == null)) {
                this.GravarFolderCloudDocsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGravarFolderCloudDocsOperationCompleted);
            }
            this.InvokeAsync("GravarFolderCloudDocs", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        FolderId,
                        FolderIdPai,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Indice05,
                        Indice06,
                        Documentos,
                        Tamanhos,
                        Classificacao,
                        NomeArquivo,
                        Criptografada,
                        ClienteDocumentoId,
                        iTotalPaginas,
                        DataVencimento,
                        EmailAvisoVencimento,
                        QtdeDiasAvisoVencimento,
                        Observacoes,
                        flpChaveTransferencia,
                        HashComputer,
                        Evento}, this.GravarFolderCloudDocsOperationCompleted, userState);
        }
        
        private void OnGravarFolderCloudDocsOperationCompleted(object arg) {
            if ((this.GravarFolderCloudDocsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GravarFolderCloudDocsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GravarFolderCloudDocsComComplemento", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GravarFolderCloudDocsComComplemento(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string Indice05, 
                    string Indice06, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    string[] Complemento, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    [System.Xml.Serialization.XmlArrayItemAttribute()] System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    int Evento) {
            this.Invoke("GravarFolderCloudDocsComComplemento", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        FolderId,
                        FolderIdPai,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Indice05,
                        Indice06,
                        Documentos,
                        Tamanhos,
                        Classificacao,
                        NomeArquivo,
                        Complemento,
                        ClienteDocumentoId,
                        iTotalPaginas,
                        DataVencimento,
                        EmailAvisoVencimento,
                        QtdeDiasAvisoVencimento,
                        Observacoes,
                        flpChaveTransferencia,
                        HashComputer,
                        Evento});
        }
        
        /// <remarks/>
        public void GravarFolderCloudDocsComComplementoAsync(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string Indice05, 
                    string Indice06, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    string[] Complemento, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    int Evento) {
            this.GravarFolderCloudDocsComComplementoAsync(ClienteId, DataCapturaFolder, UsuarioId, FolderId, FolderIdPai, TipoFolder, Indice01, Indice02, Indice03, Indice04, Indice05, Indice06, Documentos, Tamanhos, Classificacao, NomeArquivo, Complemento, ClienteDocumentoId, iTotalPaginas, DataVencimento, EmailAvisoVencimento, QtdeDiasAvisoVencimento, Observacoes, flpChaveTransferencia, HashComputer, Evento, null);
        }
        
        /// <remarks/>
        public void GravarFolderCloudDocsComComplementoAsync(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string Indice05, 
                    string Indice06, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    string[] Complemento, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    int Evento, 
                    object userState) {
            if ((this.GravarFolderCloudDocsComComplementoOperationCompleted == null)) {
                this.GravarFolderCloudDocsComComplementoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGravarFolderCloudDocsComComplementoOperationCompleted);
            }
            this.InvokeAsync("GravarFolderCloudDocsComComplemento", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        FolderId,
                        FolderIdPai,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Indice05,
                        Indice06,
                        Documentos,
                        Tamanhos,
                        Classificacao,
                        NomeArquivo,
                        Complemento,
                        ClienteDocumentoId,
                        iTotalPaginas,
                        DataVencimento,
                        EmailAvisoVencimento,
                        QtdeDiasAvisoVencimento,
                        Observacoes,
                        flpChaveTransferencia,
                        HashComputer,
                        Evento}, this.GravarFolderCloudDocsComComplementoOperationCompleted, userState);
        }
        
        private void OnGravarFolderCloudDocsComComplementoOperationCompleted(object arg) {
            if ((this.GravarFolderCloudDocsComComplementoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GravarFolderCloudDocsComComplementoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GravarFolderCloudDocsIndice10", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GravarFolderCloudDocsIndice10(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string Indice05, 
                    string Indice06, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    string[] Complemento, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    [System.Xml.Serialization.XmlArrayItemAttribute()] System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    int Evento, 
                    string Indice07, 
                    string Indice08, 
                    string Indice09, 
                    string Indice10) {
            this.Invoke("GravarFolderCloudDocsIndice10", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        FolderId,
                        FolderIdPai,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Indice05,
                        Indice06,
                        Documentos,
                        Tamanhos,
                        Classificacao,
                        NomeArquivo,
                        Complemento,
                        ClienteDocumentoId,
                        iTotalPaginas,
                        DataVencimento,
                        EmailAvisoVencimento,
                        QtdeDiasAvisoVencimento,
                        Observacoes,
                        flpChaveTransferencia,
                        HashComputer,
                        Evento,
                        Indice07,
                        Indice08,
                        Indice09,
                        Indice10});
        }
        
        /// <remarks/>
        public void GravarFolderCloudDocsIndice10Async(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string Indice05, 
                    string Indice06, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    string[] Complemento, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    int Evento, 
                    string Indice07, 
                    string Indice08, 
                    string Indice09, 
                    string Indice10) {
            this.GravarFolderCloudDocsIndice10Async(ClienteId, DataCapturaFolder, UsuarioId, FolderId, FolderIdPai, TipoFolder, Indice01, Indice02, Indice03, Indice04, Indice05, Indice06, Documentos, Tamanhos, Classificacao, NomeArquivo, Complemento, ClienteDocumentoId, iTotalPaginas, DataVencimento, EmailAvisoVencimento, QtdeDiasAvisoVencimento, Observacoes, flpChaveTransferencia, HashComputer, Evento, Indice07, Indice08, Indice09, Indice10, null);
        }
        
        /// <remarks/>
        public void GravarFolderCloudDocsIndice10Async(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string Indice05, 
                    string Indice06, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    string[] Complemento, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    int Evento, 
                    string Indice07, 
                    string Indice08, 
                    string Indice09, 
                    string Indice10, 
                    object userState) {
            if ((this.GravarFolderCloudDocsIndice10OperationCompleted == null)) {
                this.GravarFolderCloudDocsIndice10OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGravarFolderCloudDocsIndice10OperationCompleted);
            }
            this.InvokeAsync("GravarFolderCloudDocsIndice10", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        FolderId,
                        FolderIdPai,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Indice05,
                        Indice06,
                        Documentos,
                        Tamanhos,
                        Classificacao,
                        NomeArquivo,
                        Complemento,
                        ClienteDocumentoId,
                        iTotalPaginas,
                        DataVencimento,
                        EmailAvisoVencimento,
                        QtdeDiasAvisoVencimento,
                        Observacoes,
                        flpChaveTransferencia,
                        HashComputer,
                        Evento,
                        Indice07,
                        Indice08,
                        Indice09,
                        Indice10}, this.GravarFolderCloudDocsIndice10OperationCompleted, userState);
        }
        
        private void OnGravarFolderCloudDocsIndice10OperationCompleted(object arg) {
            if ((this.GravarFolderCloudDocsIndice10Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GravarFolderCloudDocsIndice10Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GravarFolderCloudDocsComTabelaTemporalidade", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GravarFolderCloudDocsComTabelaTemporalidade(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string Indice05, 
                    string Indice06, 
                    string Indice07, 
                    string Indice08, 
                    string Indice09, 
                    string Indice10, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    string[] Complemento, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    [System.Xml.Serialization.XmlArrayItemAttribute()] System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    int Evento, 
                    decimal TemporalidadeId, 
                    string DataAutuacao, 
                    string DataArquivamento, 
                    int SuporteId) {
            this.Invoke("GravarFolderCloudDocsComTabelaTemporalidade", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        FolderId,
                        FolderIdPai,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Indice05,
                        Indice06,
                        Indice07,
                        Indice08,
                        Indice09,
                        Indice10,
                        Documentos,
                        Tamanhos,
                        Classificacao,
                        NomeArquivo,
                        Complemento,
                        ClienteDocumentoId,
                        iTotalPaginas,
                        DataVencimento,
                        EmailAvisoVencimento,
                        QtdeDiasAvisoVencimento,
                        Observacoes,
                        flpChaveTransferencia,
                        HashComputer,
                        Evento,
                        TemporalidadeId,
                        DataAutuacao,
                        DataArquivamento,
                        SuporteId});
        }
        
        /// <remarks/>
        public void GravarFolderCloudDocsComTabelaTemporalidadeAsync(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string Indice05, 
                    string Indice06, 
                    string Indice07, 
                    string Indice08, 
                    string Indice09, 
                    string Indice10, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    string[] Complemento, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    int Evento, 
                    decimal TemporalidadeId, 
                    string DataAutuacao, 
                    string DataArquivamento, 
                    int SuporteId) {
            this.GravarFolderCloudDocsComTabelaTemporalidadeAsync(ClienteId, DataCapturaFolder, UsuarioId, FolderId, FolderIdPai, TipoFolder, Indice01, Indice02, Indice03, Indice04, Indice05, Indice06, Indice07, Indice08, Indice09, Indice10, Documentos, Tamanhos, Classificacao, NomeArquivo, Complemento, ClienteDocumentoId, iTotalPaginas, DataVencimento, EmailAvisoVencimento, QtdeDiasAvisoVencimento, Observacoes, flpChaveTransferencia, HashComputer, Evento, TemporalidadeId, DataAutuacao, DataArquivamento, SuporteId, null);
        }
        
        /// <remarks/>
        public void GravarFolderCloudDocsComTabelaTemporalidadeAsync(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string Indice05, 
                    string Indice06, 
                    string Indice07, 
                    string Indice08, 
                    string Indice09, 
                    string Indice10, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    string[] Complemento, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    int Evento, 
                    decimal TemporalidadeId, 
                    string DataAutuacao, 
                    string DataArquivamento, 
                    int SuporteId, 
                    object userState) {
            if ((this.GravarFolderCloudDocsComTabelaTemporalidadeOperationCompleted == null)) {
                this.GravarFolderCloudDocsComTabelaTemporalidadeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGravarFolderCloudDocsComTabelaTemporalidadeOperationCompleted);
            }
            this.InvokeAsync("GravarFolderCloudDocsComTabelaTemporalidade", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        FolderId,
                        FolderIdPai,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Indice05,
                        Indice06,
                        Indice07,
                        Indice08,
                        Indice09,
                        Indice10,
                        Documentos,
                        Tamanhos,
                        Classificacao,
                        NomeArquivo,
                        Complemento,
                        ClienteDocumentoId,
                        iTotalPaginas,
                        DataVencimento,
                        EmailAvisoVencimento,
                        QtdeDiasAvisoVencimento,
                        Observacoes,
                        flpChaveTransferencia,
                        HashComputer,
                        Evento,
                        TemporalidadeId,
                        DataAutuacao,
                        DataArquivamento,
                        SuporteId}, this.GravarFolderCloudDocsComTabelaTemporalidadeOperationCompleted, userState);
        }
        
        private void OnGravarFolderCloudDocsComTabelaTemporalidadeOperationCompleted(object arg) {
            if ((this.GravarFolderCloudDocsComTabelaTemporalidadeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GravarFolderCloudDocsComTabelaTemporalidadeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultarTipoDocumento", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConsultarTipoDocumento(int TipoDocumentoId) {
            object[] results = this.Invoke("ConsultarTipoDocumento", new object[] {
                        TipoDocumentoId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultarTipoDocumentoAsync(int TipoDocumentoId) {
            this.ConsultarTipoDocumentoAsync(TipoDocumentoId, null);
        }
        
        /// <remarks/>
        public void ConsultarTipoDocumentoAsync(int TipoDocumentoId, object userState) {
            if ((this.ConsultarTipoDocumentoOperationCompleted == null)) {
                this.ConsultarTipoDocumentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultarTipoDocumentoOperationCompleted);
            }
            this.InvokeAsync("ConsultarTipoDocumento", new object[] {
                        TipoDocumentoId}, this.ConsultarTipoDocumentoOperationCompleted, userState);
        }
        
        private void OnConsultarTipoDocumentoOperationCompleted(object arg) {
            if ((this.ConsultarTipoDocumentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultarTipoDocumentoCompleted(this, new ConsultarTipoDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GravarFolderCloudDocsSemDocs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GravarFolderCloudDocsSemDocs(int ClienteId, System.DateTime DataCapturaFolder, long UsuarioId, decimal TipoFolder, string Indice01, string Indice02, string Indice03, string Indice04, string Indice05, string Indice06, bool Criptografada, decimal ClienteDocumentoId, string flpChaveTransferencia, int Evento) {
            object[] results = this.Invoke("GravarFolderCloudDocsSemDocs", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Indice05,
                        Indice06,
                        Criptografada,
                        ClienteDocumentoId,
                        flpChaveTransferencia,
                        Evento});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GravarFolderCloudDocsSemDocsAsync(int ClienteId, System.DateTime DataCapturaFolder, long UsuarioId, decimal TipoFolder, string Indice01, string Indice02, string Indice03, string Indice04, string Indice05, string Indice06, bool Criptografada, decimal ClienteDocumentoId, string flpChaveTransferencia, int Evento) {
            this.GravarFolderCloudDocsSemDocsAsync(ClienteId, DataCapturaFolder, UsuarioId, TipoFolder, Indice01, Indice02, Indice03, Indice04, Indice05, Indice06, Criptografada, ClienteDocumentoId, flpChaveTransferencia, Evento, null);
        }
        
        /// <remarks/>
        public void GravarFolderCloudDocsSemDocsAsync(int ClienteId, System.DateTime DataCapturaFolder, long UsuarioId, decimal TipoFolder, string Indice01, string Indice02, string Indice03, string Indice04, string Indice05, string Indice06, bool Criptografada, decimal ClienteDocumentoId, string flpChaveTransferencia, int Evento, object userState) {
            if ((this.GravarFolderCloudDocsSemDocsOperationCompleted == null)) {
                this.GravarFolderCloudDocsSemDocsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGravarFolderCloudDocsSemDocsOperationCompleted);
            }
            this.InvokeAsync("GravarFolderCloudDocsSemDocs", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Indice05,
                        Indice06,
                        Criptografada,
                        ClienteDocumentoId,
                        flpChaveTransferencia,
                        Evento}, this.GravarFolderCloudDocsSemDocsOperationCompleted, userState);
        }
        
        private void OnGravarFolderCloudDocsSemDocsOperationCompleted(object arg) {
            if ((this.GravarFolderCloudDocsSemDocsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GravarFolderCloudDocsSemDocsCompleted(this, new GravarFolderCloudDocsSemDocsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GravarDocumentosDigitalizadosBotaoDireito", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GravarDocumentosDigitalizadosBotaoDireito(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    string NomePasta, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    bool Criptografada, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    [System.Xml.Serialization.XmlArrayItemAttribute()] System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    bool FTP) {
            this.Invoke("GravarDocumentosDigitalizadosBotaoDireito", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        FolderId,
                        FolderIdPai,
                        NomePasta,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Documentos,
                        Tamanhos,
                        Classificacao,
                        NomeArquivo,
                        Criptografada,
                        ClienteDocumentoId,
                        iTotalPaginas,
                        DataVencimento,
                        EmailAvisoVencimento,
                        QtdeDiasAvisoVencimento,
                        Observacoes,
                        flpChaveTransferencia,
                        HashComputer,
                        FTP});
        }
        
        /// <remarks/>
        public void GravarDocumentosDigitalizadosBotaoDireitoAsync(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    string NomePasta, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    bool Criptografada, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    bool FTP) {
            this.GravarDocumentosDigitalizadosBotaoDireitoAsync(ClienteId, DataCapturaFolder, UsuarioId, FolderId, FolderIdPai, NomePasta, TipoFolder, Indice01, Indice02, Indice03, Indice04, Documentos, Tamanhos, Classificacao, NomeArquivo, Criptografada, ClienteDocumentoId, iTotalPaginas, DataVencimento, EmailAvisoVencimento, QtdeDiasAvisoVencimento, Observacoes, flpChaveTransferencia, HashComputer, FTP, null);
        }
        
        /// <remarks/>
        public void GravarDocumentosDigitalizadosBotaoDireitoAsync(
                    int ClienteId, 
                    System.DateTime DataCapturaFolder, 
                    long UsuarioId, 
                    long FolderId, 
                    long FolderIdPai, 
                    string NomePasta, 
                    decimal TipoFolder, 
                    string Indice01, 
                    string Indice02, 
                    string Indice03, 
                    string Indice04, 
                    string[] Documentos, 
                    string[] Tamanhos, 
                    string[] Classificacao, 
                    string[] NomeArquivo, 
                    bool Criptografada, 
                    decimal ClienteDocumentoId, 
                    int[] iTotalPaginas, 
                    System.Nullable<System.DateTime>[] DataVencimento, 
                    string[] EmailAvisoVencimento, 
                    int[] QtdeDiasAvisoVencimento, 
                    string[] Observacoes, 
                    string flpChaveTransferencia, 
                    string HashComputer, 
                    bool FTP, 
                    object userState) {
            if ((this.GravarDocumentosDigitalizadosBotaoDireitoOperationCompleted == null)) {
                this.GravarDocumentosDigitalizadosBotaoDireitoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGravarDocumentosDigitalizadosBotaoDireitoOperationCompleted);
            }
            this.InvokeAsync("GravarDocumentosDigitalizadosBotaoDireito", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        FolderId,
                        FolderIdPai,
                        NomePasta,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        Documentos,
                        Tamanhos,
                        Classificacao,
                        NomeArquivo,
                        Criptografada,
                        ClienteDocumentoId,
                        iTotalPaginas,
                        DataVencimento,
                        EmailAvisoVencimento,
                        QtdeDiasAvisoVencimento,
                        Observacoes,
                        flpChaveTransferencia,
                        HashComputer,
                        FTP}, this.GravarDocumentosDigitalizadosBotaoDireitoOperationCompleted, userState);
        }
        
        private void OnGravarDocumentosDigitalizadosBotaoDireitoOperationCompleted(object arg) {
            if ((this.GravarDocumentosDigitalizadosBotaoDireitoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GravarDocumentosDigitalizadosBotaoDireitoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GravarFolderParaIndexacao", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GravarFolderParaIndexacao(int ClienteId, System.DateTime DataCapturaFolder, long UsuarioId, string[] Documentos, string[] Tamanhos, string[] NomeArquivo, int[] iTotalPaginas, string[] Classificacao, string HashComputer) {
            this.Invoke("GravarFolderParaIndexacao", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        Documentos,
                        Tamanhos,
                        NomeArquivo,
                        iTotalPaginas,
                        Classificacao,
                        HashComputer});
        }
        
        /// <remarks/>
        public void GravarFolderParaIndexacaoAsync(int ClienteId, System.DateTime DataCapturaFolder, long UsuarioId, string[] Documentos, string[] Tamanhos, string[] NomeArquivo, int[] iTotalPaginas, string[] Classificacao, string HashComputer) {
            this.GravarFolderParaIndexacaoAsync(ClienteId, DataCapturaFolder, UsuarioId, Documentos, Tamanhos, NomeArquivo, iTotalPaginas, Classificacao, HashComputer, null);
        }
        
        /// <remarks/>
        public void GravarFolderParaIndexacaoAsync(int ClienteId, System.DateTime DataCapturaFolder, long UsuarioId, string[] Documentos, string[] Tamanhos, string[] NomeArquivo, int[] iTotalPaginas, string[] Classificacao, string HashComputer, object userState) {
            if ((this.GravarFolderParaIndexacaoOperationCompleted == null)) {
                this.GravarFolderParaIndexacaoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGravarFolderParaIndexacaoOperationCompleted);
            }
            this.InvokeAsync("GravarFolderParaIndexacao", new object[] {
                        ClienteId,
                        DataCapturaFolder,
                        UsuarioId,
                        Documentos,
                        Tamanhos,
                        NomeArquivo,
                        iTotalPaginas,
                        Classificacao,
                        HashComputer}, this.GravarFolderParaIndexacaoOperationCompleted, userState);
        }
        
        private void OnGravarFolderParaIndexacaoOperationCompleted(object arg) {
            if ((this.GravarFolderParaIndexacaoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GravarFolderParaIndexacaoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CriarPasta", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal CriarPasta(decimal TipoFolder, long FolderIdPai, string NomePasta, decimal UsuarioId) {
            object[] results = this.Invoke("CriarPasta", new object[] {
                        TipoFolder,
                        FolderIdPai,
                        NomePasta,
                        UsuarioId});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CriarPastaAsync(decimal TipoFolder, long FolderIdPai, string NomePasta, decimal UsuarioId) {
            this.CriarPastaAsync(TipoFolder, FolderIdPai, NomePasta, UsuarioId, null);
        }
        
        /// <remarks/>
        public void CriarPastaAsync(decimal TipoFolder, long FolderIdPai, string NomePasta, decimal UsuarioId, object userState) {
            if ((this.CriarPastaOperationCompleted == null)) {
                this.CriarPastaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCriarPastaOperationCompleted);
            }
            this.InvokeAsync("CriarPasta", new object[] {
                        TipoFolder,
                        FolderIdPai,
                        NomePasta,
                        UsuarioId}, this.CriarPastaOperationCompleted, userState);
        }
        
        private void OnCriarPastaOperationCompleted(object arg) {
            if ((this.CriarPastaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CriarPastaCompleted(this, new CriarPastaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscaTiposFolderesToTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscaTiposFolderesToTable(int clienteId) {
            object[] results = this.Invoke("BuscaTiposFolderesToTable", new object[] {
                        clienteId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscaTiposFolderesToTableAsync(int clienteId) {
            this.BuscaTiposFolderesToTableAsync(clienteId, null);
        }
        
        /// <remarks/>
        public void BuscaTiposFolderesToTableAsync(int clienteId, object userState) {
            if ((this.BuscaTiposFolderesToTableOperationCompleted == null)) {
                this.BuscaTiposFolderesToTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscaTiposFolderesToTableOperationCompleted);
            }
            this.InvokeAsync("BuscaTiposFolderesToTable", new object[] {
                        clienteId}, this.BuscaTiposFolderesToTableOperationCompleted, userState);
        }
        
        private void OnBuscaTiposFolderesToTableOperationCompleted(object arg) {
            if ((this.BuscaTiposFolderesToTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscaTiposFolderesToTableCompleted(this, new BuscaTiposFolderesToTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscaTiposFolderesToTablePorUsuario", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscaTiposFolderesToTablePorUsuario(decimal usuarioId, int clienteId) {
            object[] results = this.Invoke("BuscaTiposFolderesToTablePorUsuario", new object[] {
                        usuarioId,
                        clienteId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscaTiposFolderesToTablePorUsuarioAsync(decimal usuarioId, int clienteId) {
            this.BuscaTiposFolderesToTablePorUsuarioAsync(usuarioId, clienteId, null);
        }
        
        /// <remarks/>
        public void BuscaTiposFolderesToTablePorUsuarioAsync(decimal usuarioId, int clienteId, object userState) {
            if ((this.BuscaTiposFolderesToTablePorUsuarioOperationCompleted == null)) {
                this.BuscaTiposFolderesToTablePorUsuarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscaTiposFolderesToTablePorUsuarioOperationCompleted);
            }
            this.InvokeAsync("BuscaTiposFolderesToTablePorUsuario", new object[] {
                        usuarioId,
                        clienteId}, this.BuscaTiposFolderesToTablePorUsuarioOperationCompleted, userState);
        }
        
        private void OnBuscaTiposFolderesToTablePorUsuarioOperationCompleted(object arg) {
            if ((this.BuscaTiposFolderesToTablePorUsuarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscaTiposFolderesToTablePorUsuarioCompleted(this, new BuscaTiposFolderesToTablePorUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscaTiposFolderesDigitalizacao", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscaTiposFolderesDigitalizacao(decimal usuarioId, int clienteId) {
            object[] results = this.Invoke("BuscaTiposFolderesDigitalizacao", new object[] {
                        usuarioId,
                        clienteId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscaTiposFolderesDigitalizacaoAsync(decimal usuarioId, int clienteId) {
            this.BuscaTiposFolderesDigitalizacaoAsync(usuarioId, clienteId, null);
        }
        
        /// <remarks/>
        public void BuscaTiposFolderesDigitalizacaoAsync(decimal usuarioId, int clienteId, object userState) {
            if ((this.BuscaTiposFolderesDigitalizacaoOperationCompleted == null)) {
                this.BuscaTiposFolderesDigitalizacaoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscaTiposFolderesDigitalizacaoOperationCompleted);
            }
            this.InvokeAsync("BuscaTiposFolderesDigitalizacao", new object[] {
                        usuarioId,
                        clienteId}, this.BuscaTiposFolderesDigitalizacaoOperationCompleted, userState);
        }
        
        private void OnBuscaTiposFolderesDigitalizacaoOperationCompleted(object arg) {
            if ((this.BuscaTiposFolderesDigitalizacaoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscaTiposFolderesDigitalizacaoCompleted(this, new BuscaTiposFolderesDigitalizacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscaClientesDoClientePorUsuario", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscaClientesDoClientePorUsuario(decimal usuarioId, int clienteId) {
            object[] results = this.Invoke("BuscaClientesDoClientePorUsuario", new object[] {
                        usuarioId,
                        clienteId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscaClientesDoClientePorUsuarioAsync(decimal usuarioId, int clienteId) {
            this.BuscaClientesDoClientePorUsuarioAsync(usuarioId, clienteId, null);
        }
        
        /// <remarks/>
        public void BuscaClientesDoClientePorUsuarioAsync(decimal usuarioId, int clienteId, object userState) {
            if ((this.BuscaClientesDoClientePorUsuarioOperationCompleted == null)) {
                this.BuscaClientesDoClientePorUsuarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscaClientesDoClientePorUsuarioOperationCompleted);
            }
            this.InvokeAsync("BuscaClientesDoClientePorUsuario", new object[] {
                        usuarioId,
                        clienteId}, this.BuscaClientesDoClientePorUsuarioOperationCompleted, userState);
        }
        
        private void OnBuscaClientesDoClientePorUsuarioOperationCompleted(object arg) {
            if ((this.BuscaClientesDoClientePorUsuarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscaClientesDoClientePorUsuarioCompleted(this, new BuscaClientesDoClientePorUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscaClientesDoCliente", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscaClientesDoCliente(int clienteId) {
            object[] results = this.Invoke("BuscaClientesDoCliente", new object[] {
                        clienteId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscaClientesDoClienteAsync(int clienteId) {
            this.BuscaClientesDoClienteAsync(clienteId, null);
        }
        
        /// <remarks/>
        public void BuscaClientesDoClienteAsync(int clienteId, object userState) {
            if ((this.BuscaClientesDoClienteOperationCompleted == null)) {
                this.BuscaClientesDoClienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscaClientesDoClienteOperationCompleted);
            }
            this.InvokeAsync("BuscaClientesDoCliente", new object[] {
                        clienteId}, this.BuscaClientesDoClienteOperationCompleted, userState);
        }
        
        private void OnBuscaClientesDoClienteOperationCompleted(object arg) {
            if ((this.BuscaClientesDoClienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscaClientesDoClienteCompleted(this, new BuscaClientesDoClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscaEventos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscaEventos(int FolderId) {
            object[] results = this.Invoke("BuscaEventos", new object[] {
                        FolderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscaEventosAsync(int FolderId) {
            this.BuscaEventosAsync(FolderId, null);
        }
        
        /// <remarks/>
        public void BuscaEventosAsync(int FolderId, object userState) {
            if ((this.BuscaEventosOperationCompleted == null)) {
                this.BuscaEventosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscaEventosOperationCompleted);
            }
            this.InvokeAsync("BuscaEventos", new object[] {
                        FolderId}, this.BuscaEventosOperationCompleted, userState);
        }
        
        private void OnBuscaEventosOperationCompleted(object arg) {
            if ((this.BuscaEventosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscaEventosCompleted(this, new BuscaEventosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscaTiposDocumentos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscaTiposDocumentos(int TipoFolderId) {
            object[] results = this.Invoke("BuscaTiposDocumentos", new object[] {
                        TipoFolderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscaTiposDocumentosAsync(int TipoFolderId) {
            this.BuscaTiposDocumentosAsync(TipoFolderId, null);
        }
        
        /// <remarks/>
        public void BuscaTiposDocumentosAsync(int TipoFolderId, object userState) {
            if ((this.BuscaTiposDocumentosOperationCompleted == null)) {
                this.BuscaTiposDocumentosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscaTiposDocumentosOperationCompleted);
            }
            this.InvokeAsync("BuscaTiposDocumentos", new object[] {
                        TipoFolderId}, this.BuscaTiposDocumentosOperationCompleted, userState);
        }
        
        private void OnBuscaTiposDocumentosOperationCompleted(object arg) {
            if ((this.BuscaTiposDocumentosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscaTiposDocumentosCompleted(this, new BuscaTiposDocumentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscarFoldesDocumento", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscarFoldesDocumento(long TipoFolderId) {
            object[] results = this.Invoke("BuscarFoldesDocumento", new object[] {
                        TipoFolderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscarFoldesDocumentoAsync(long TipoFolderId) {
            this.BuscarFoldesDocumentoAsync(TipoFolderId, null);
        }
        
        /// <remarks/>
        public void BuscarFoldesDocumentoAsync(long TipoFolderId, object userState) {
            if ((this.BuscarFoldesDocumentoOperationCompleted == null)) {
                this.BuscarFoldesDocumentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscarFoldesDocumentoOperationCompleted);
            }
            this.InvokeAsync("BuscarFoldesDocumento", new object[] {
                        TipoFolderId}, this.BuscarFoldesDocumentoOperationCompleted, userState);
        }
        
        private void OnBuscarFoldesDocumentoOperationCompleted(object arg) {
            if ((this.BuscarFoldesDocumentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscarFoldesDocumentoCompleted(this, new BuscarFoldesDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscarFoldesDocumentoByPai", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscarFoldesDocumentoByPai(decimal fldIdPai) {
            object[] results = this.Invoke("BuscarFoldesDocumentoByPai", new object[] {
                        fldIdPai});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscarFoldesDocumentoByPaiAsync(decimal fldIdPai) {
            this.BuscarFoldesDocumentoByPaiAsync(fldIdPai, null);
        }
        
        /// <remarks/>
        public void BuscarFoldesDocumentoByPaiAsync(decimal fldIdPai, object userState) {
            if ((this.BuscarFoldesDocumentoByPaiOperationCompleted == null)) {
                this.BuscarFoldesDocumentoByPaiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscarFoldesDocumentoByPaiOperationCompleted);
            }
            this.InvokeAsync("BuscarFoldesDocumentoByPai", new object[] {
                        fldIdPai}, this.BuscarFoldesDocumentoByPaiOperationCompleted, userState);
        }
        
        private void OnBuscarFoldesDocumentoByPaiOperationCompleted(object arg) {
            if ((this.BuscarFoldesDocumentoByPaiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscarFoldesDocumentoByPaiCompleted(this, new BuscarFoldesDocumentoByPaiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscaClientes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscaClientes(long usuId) {
            object[] results = this.Invoke("BuscaClientes", new object[] {
                        usuId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscaClientesAsync(long usuId) {
            this.BuscaClientesAsync(usuId, null);
        }
        
        /// <remarks/>
        public void BuscaClientesAsync(long usuId, object userState) {
            if ((this.BuscaClientesOperationCompleted == null)) {
                this.BuscaClientesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscaClientesOperationCompleted);
            }
            this.InvokeAsync("BuscaClientes", new object[] {
                        usuId}, this.BuscaClientesOperationCompleted, userState);
        }
        
        private void OnBuscaClientesOperationCompleted(object arg) {
            if ((this.BuscaClientesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscaClientesCompleted(this, new BuscaClientesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscaClientesCloudDocs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscaClientesCloudDocs(long usuId) {
            object[] results = this.Invoke("BuscaClientesCloudDocs", new object[] {
                        usuId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscaClientesCloudDocsAsync(long usuId) {
            this.BuscaClientesCloudDocsAsync(usuId, null);
        }
        
        /// <remarks/>
        public void BuscaClientesCloudDocsAsync(long usuId, object userState) {
            if ((this.BuscaClientesCloudDocsOperationCompleted == null)) {
                this.BuscaClientesCloudDocsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscaClientesCloudDocsOperationCompleted);
            }
            this.InvokeAsync("BuscaClientesCloudDocs", new object[] {
                        usuId}, this.BuscaClientesCloudDocsOperationCompleted, userState);
        }
        
        private void OnBuscaClientesCloudDocsOperationCompleted(object arg) {
            if ((this.BuscaClientesCloudDocsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscaClientesCloudDocsCompleted(this, new BuscaClientesCloudDocsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidarUsuario", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long ValidarUsuario(string Login, string senha) {
            object[] results = this.Invoke("ValidarUsuario", new object[] {
                        Login,
                        senha});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ValidarUsuarioAsync(string Login, string senha) {
            this.ValidarUsuarioAsync(Login, senha, null);
        }
        
        /// <remarks/>
        public void ValidarUsuarioAsync(string Login, string senha, object userState) {
            if ((this.ValidarUsuarioOperationCompleted == null)) {
                this.ValidarUsuarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidarUsuarioOperationCompleted);
            }
            this.InvokeAsync("ValidarUsuario", new object[] {
                        Login,
                        senha}, this.ValidarUsuarioOperationCompleted, userState);
        }
        
        private void OnValidarUsuarioOperationCompleted(object arg) {
            if ((this.ValidarUsuarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidarUsuarioCompleted(this, new ValidarUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidarUsuarioAD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long ValidarUsuarioAD(string Login, string senha) {
            object[] results = this.Invoke("ValidarUsuarioAD", new object[] {
                        Login,
                        senha});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ValidarUsuarioADAsync(string Login, string senha) {
            this.ValidarUsuarioADAsync(Login, senha, null);
        }
        
        /// <remarks/>
        public void ValidarUsuarioADAsync(string Login, string senha, object userState) {
            if ((this.ValidarUsuarioADOperationCompleted == null)) {
                this.ValidarUsuarioADOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidarUsuarioADOperationCompleted);
            }
            this.InvokeAsync("ValidarUsuarioAD", new object[] {
                        Login,
                        senha}, this.ValidarUsuarioADOperationCompleted, userState);
        }
        
        private void OnValidarUsuarioADOperationCompleted(object arg) {
            if ((this.ValidarUsuarioADCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidarUsuarioADCompleted(this, new ValidarUsuarioADCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscarUsuario", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public USUARIO BuscarUsuario(decimal UsuarioId) {
            object[] results = this.Invoke("BuscarUsuario", new object[] {
                        UsuarioId});
            return ((USUARIO)(results[0]));
        }
        
        /// <remarks/>
        public void BuscarUsuarioAsync(decimal UsuarioId) {
            this.BuscarUsuarioAsync(UsuarioId, null);
        }
        
        /// <remarks/>
        public void BuscarUsuarioAsync(decimal UsuarioId, object userState) {
            if ((this.BuscarUsuarioOperationCompleted == null)) {
                this.BuscarUsuarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscarUsuarioOperationCompleted);
            }
            this.InvokeAsync("BuscarUsuario", new object[] {
                        UsuarioId}, this.BuscarUsuarioOperationCompleted, userState);
        }
        
        private void OnBuscarUsuarioOperationCompleted(object arg) {
            if ((this.BuscarUsuarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscarUsuarioCompleted(this, new BuscarUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscarUsuarioExterno", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DOC_USUARIOEXTERNO BuscarUsuarioExterno(decimal UsuarioId) {
            object[] results = this.Invoke("BuscarUsuarioExterno", new object[] {
                        UsuarioId});
            return ((DOC_USUARIOEXTERNO)(results[0]));
        }
        
        /// <remarks/>
        public void BuscarUsuarioExternoAsync(decimal UsuarioId) {
            this.BuscarUsuarioExternoAsync(UsuarioId, null);
        }
        
        /// <remarks/>
        public void BuscarUsuarioExternoAsync(decimal UsuarioId, object userState) {
            if ((this.BuscarUsuarioExternoOperationCompleted == null)) {
                this.BuscarUsuarioExternoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscarUsuarioExternoOperationCompleted);
            }
            this.InvokeAsync("BuscarUsuarioExterno", new object[] {
                        UsuarioId}, this.BuscarUsuarioExternoOperationCompleted, userState);
        }
        
        private void OnBuscarUsuarioExternoOperationCompleted(object arg) {
            if ((this.BuscarUsuarioExternoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscarUsuarioExternoCompleted(this, new BuscarUsuarioExternoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscaIntegracaoVirtual", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscaIntegracaoVirtual(decimal clienteId) {
            object[] results = this.Invoke("BuscaIntegracaoVirtual", new object[] {
                        clienteId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscaIntegracaoVirtualAsync(decimal clienteId) {
            this.BuscaIntegracaoVirtualAsync(clienteId, null);
        }
        
        /// <remarks/>
        public void BuscaIntegracaoVirtualAsync(decimal clienteId, object userState) {
            if ((this.BuscaIntegracaoVirtualOperationCompleted == null)) {
                this.BuscaIntegracaoVirtualOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscaIntegracaoVirtualOperationCompleted);
            }
            this.InvokeAsync("BuscaIntegracaoVirtual", new object[] {
                        clienteId}, this.BuscaIntegracaoVirtualOperationCompleted, userState);
        }
        
        private void OnBuscaIntegracaoVirtualOperationCompleted(object arg) {
            if ((this.BuscaIntegracaoVirtualCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscaIntegracaoVirtualCompleted(this, new BuscaIntegracaoVirtualCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscaConfiguracaoSistema", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscaConfiguracaoSistema() {
            object[] results = this.Invoke("BuscaConfiguracaoSistema", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscaConfiguracaoSistemaAsync() {
            this.BuscaConfiguracaoSistemaAsync(null);
        }
        
        /// <remarks/>
        public void BuscaConfiguracaoSistemaAsync(object userState) {
            if ((this.BuscaConfiguracaoSistemaOperationCompleted == null)) {
                this.BuscaConfiguracaoSistemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscaConfiguracaoSistemaOperationCompleted);
            }
            this.InvokeAsync("BuscaConfiguracaoSistema", new object[0], this.BuscaConfiguracaoSistemaOperationCompleted, userState);
        }
        
        private void OnBuscaConfiguracaoSistemaOperationCompleted(object arg) {
            if ((this.BuscaConfiguracaoSistemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscaConfiguracaoSistemaCompleted(this, new BuscaConfiguracaoSistemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscaConfiguracaoCliente", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscaConfiguracaoCliente(decimal ClienteId) {
            object[] results = this.Invoke("BuscaConfiguracaoCliente", new object[] {
                        ClienteId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscaConfiguracaoClienteAsync(decimal ClienteId) {
            this.BuscaConfiguracaoClienteAsync(ClienteId, null);
        }
        
        /// <remarks/>
        public void BuscaConfiguracaoClienteAsync(decimal ClienteId, object userState) {
            if ((this.BuscaConfiguracaoClienteOperationCompleted == null)) {
                this.BuscaConfiguracaoClienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscaConfiguracaoClienteOperationCompleted);
            }
            this.InvokeAsync("BuscaConfiguracaoCliente", new object[] {
                        ClienteId}, this.BuscaConfiguracaoClienteOperationCompleted, userState);
        }
        
        private void OnBuscaConfiguracaoClienteOperationCompleted(object arg) {
            if ((this.BuscaConfiguracaoClienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscaConfiguracaoClienteCompleted(this, new BuscaConfiguracaoClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdicionarClassificacao", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal AdicionarClassificacao(decimal TipoFolderId, string Descricao, bool tpdVencimento, int tpdTempoAviso, string tpdEmailAviso) {
            object[] results = this.Invoke("AdicionarClassificacao", new object[] {
                        TipoFolderId,
                        Descricao,
                        tpdVencimento,
                        tpdTempoAviso,
                        tpdEmailAviso});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void AdicionarClassificacaoAsync(decimal TipoFolderId, string Descricao, bool tpdVencimento, int tpdTempoAviso, string tpdEmailAviso) {
            this.AdicionarClassificacaoAsync(TipoFolderId, Descricao, tpdVencimento, tpdTempoAviso, tpdEmailAviso, null);
        }
        
        /// <remarks/>
        public void AdicionarClassificacaoAsync(decimal TipoFolderId, string Descricao, bool tpdVencimento, int tpdTempoAviso, string tpdEmailAviso, object userState) {
            if ((this.AdicionarClassificacaoOperationCompleted == null)) {
                this.AdicionarClassificacaoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdicionarClassificacaoOperationCompleted);
            }
            this.InvokeAsync("AdicionarClassificacao", new object[] {
                        TipoFolderId,
                        Descricao,
                        tpdVencimento,
                        tpdTempoAviso,
                        tpdEmailAviso}, this.AdicionarClassificacaoOperationCompleted, userState);
        }
        
        private void OnAdicionarClassificacaoOperationCompleted(object arg) {
            if ((this.AdicionarClassificacaoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdicionarClassificacaoCompleted(this, new AdicionarClassificacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AtualizaFolderProcesso", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AtualizaFolderProcesso(decimal FolderProcessoId, decimal UsuarioId) {
            this.Invoke("AtualizaFolderProcesso", new object[] {
                        FolderProcessoId,
                        UsuarioId});
        }
        
        /// <remarks/>
        public void AtualizaFolderProcessoAsync(decimal FolderProcessoId, decimal UsuarioId) {
            this.AtualizaFolderProcessoAsync(FolderProcessoId, UsuarioId, null);
        }
        
        /// <remarks/>
        public void AtualizaFolderProcessoAsync(decimal FolderProcessoId, decimal UsuarioId, object userState) {
            if ((this.AtualizaFolderProcessoOperationCompleted == null)) {
                this.AtualizaFolderProcessoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAtualizaFolderProcessoOperationCompleted);
            }
            this.InvokeAsync("AtualizaFolderProcesso", new object[] {
                        FolderProcessoId,
                        UsuarioId}, this.AtualizaFolderProcessoOperationCompleted, userState);
        }
        
        private void OnAtualizaFolderProcessoOperationCompleted(object arg) {
            if ((this.AtualizaFolderProcessoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AtualizaFolderProcessoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VerificaArquivo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool VerificaArquivo(string Estrutura, string FileName, long TamanhoArquivo) {
            object[] results = this.Invoke("VerificaArquivo", new object[] {
                        Estrutura,
                        FileName,
                        TamanhoArquivo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaArquivoAsync(string Estrutura, string FileName, long TamanhoArquivo) {
            this.VerificaArquivoAsync(Estrutura, FileName, TamanhoArquivo, null);
        }
        
        /// <remarks/>
        public void VerificaArquivoAsync(string Estrutura, string FileName, long TamanhoArquivo, object userState) {
            if ((this.VerificaArquivoOperationCompleted == null)) {
                this.VerificaArquivoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaArquivoOperationCompleted);
            }
            this.InvokeAsync("VerificaArquivo", new object[] {
                        Estrutura,
                        FileName,
                        TamanhoArquivo}, this.VerificaArquivoOperationCompleted, userState);
        }
        
        private void OnVerificaArquivoOperationCompleted(object arg) {
            if ((this.VerificaArquivoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaArquivoCompleted(this, new VerificaArquivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VerificaArquivoFolderProcesso", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool VerificaArquivoFolderProcesso(string Arquivo, long TamanhoArquivo) {
            object[] results = this.Invoke("VerificaArquivoFolderProcesso", new object[] {
                        Arquivo,
                        TamanhoArquivo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaArquivoFolderProcessoAsync(string Arquivo, long TamanhoArquivo) {
            this.VerificaArquivoFolderProcessoAsync(Arquivo, TamanhoArquivo, null);
        }
        
        /// <remarks/>
        public void VerificaArquivoFolderProcessoAsync(string Arquivo, long TamanhoArquivo, object userState) {
            if ((this.VerificaArquivoFolderProcessoOperationCompleted == null)) {
                this.VerificaArquivoFolderProcessoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaArquivoFolderProcessoOperationCompleted);
            }
            this.InvokeAsync("VerificaArquivoFolderProcesso", new object[] {
                        Arquivo,
                        TamanhoArquivo}, this.VerificaArquivoFolderProcessoOperationCompleted, userState);
        }
        
        private void OnVerificaArquivoFolderProcessoOperationCompleted(object arg) {
            if ((this.VerificaArquivoFolderProcessoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaArquivoFolderProcessoCompleted(this, new VerificaArquivoFolderProcessoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GravarFolderProcesso", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GravarFolderProcesso(string Arquivo, decimal UsuarioId, decimal TipoFolder, decimal ClienteOrigem, string Competencia, int TamanhoArquivo, int QtdeFoldes) {
            object[] results = this.Invoke("GravarFolderProcesso", new object[] {
                        Arquivo,
                        UsuarioId,
                        TipoFolder,
                        ClienteOrigem,
                        Competencia,
                        TamanhoArquivo,
                        QtdeFoldes});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GravarFolderProcessoAsync(string Arquivo, decimal UsuarioId, decimal TipoFolder, decimal ClienteOrigem, string Competencia, int TamanhoArquivo, int QtdeFoldes) {
            this.GravarFolderProcessoAsync(Arquivo, UsuarioId, TipoFolder, ClienteOrigem, Competencia, TamanhoArquivo, QtdeFoldes, null);
        }
        
        /// <remarks/>
        public void GravarFolderProcessoAsync(string Arquivo, decimal UsuarioId, decimal TipoFolder, decimal ClienteOrigem, string Competencia, int TamanhoArquivo, int QtdeFoldes, object userState) {
            if ((this.GravarFolderProcessoOperationCompleted == null)) {
                this.GravarFolderProcessoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGravarFolderProcessoOperationCompleted);
            }
            this.InvokeAsync("GravarFolderProcesso", new object[] {
                        Arquivo,
                        UsuarioId,
                        TipoFolder,
                        ClienteOrigem,
                        Competencia,
                        TamanhoArquivo,
                        QtdeFoldes}, this.GravarFolderProcessoOperationCompleted, userState);
        }
        
        private void OnGravarFolderProcessoOperationCompleted(object arg) {
            if ((this.GravarFolderProcessoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GravarFolderProcessoCompleted(this, new GravarFolderProcessoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscaLoteComProblemas", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscaLoteComProblemas(decimal UsuarioId) {
            object[] results = this.Invoke("BuscaLoteComProblemas", new object[] {
                        UsuarioId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscaLoteComProblemasAsync(decimal UsuarioId) {
            this.BuscaLoteComProblemasAsync(UsuarioId, null);
        }
        
        /// <remarks/>
        public void BuscaLoteComProblemasAsync(decimal UsuarioId, object userState) {
            if ((this.BuscaLoteComProblemasOperationCompleted == null)) {
                this.BuscaLoteComProblemasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscaLoteComProblemasOperationCompleted);
            }
            this.InvokeAsync("BuscaLoteComProblemas", new object[] {
                        UsuarioId}, this.BuscaLoteComProblemasOperationCompleted, userState);
        }
        
        private void OnBuscaLoteComProblemasOperationCompleted(object arg) {
            if ((this.BuscaLoteComProblemasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscaLoteComProblemasCompleted(this, new BuscaLoteComProblemasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscaFluxoProcesso", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscaFluxoProcesso(decimal FolderId) {
            object[] results = this.Invoke("BuscaFluxoProcesso", new object[] {
                        FolderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscaFluxoProcessoAsync(decimal FolderId) {
            this.BuscaFluxoProcessoAsync(FolderId, null);
        }
        
        /// <remarks/>
        public void BuscaFluxoProcessoAsync(decimal FolderId, object userState) {
            if ((this.BuscaFluxoProcessoOperationCompleted == null)) {
                this.BuscaFluxoProcessoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscaFluxoProcessoOperationCompleted);
            }
            this.InvokeAsync("BuscaFluxoProcesso", new object[] {
                        FolderId}, this.BuscaFluxoProcessoOperationCompleted, userState);
        }
        
        private void OnBuscaFluxoProcessoOperationCompleted(object arg) {
            if ((this.BuscaFluxoProcessoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscaFluxoProcessoCompleted(this, new BuscaFluxoProcessoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultarFolders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConsultarFolders(string TipoFolder, string Indice01, string Indice02, string Indice03, string Indice04, string DataIni, string DataFim, decimal Situacao, string Origem, decimal FolderId) {
            object[] results = this.Invoke("ConsultarFolders", new object[] {
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        DataIni,
                        DataFim,
                        Situacao,
                        Origem,
                        FolderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultarFoldersAsync(string TipoFolder, string Indice01, string Indice02, string Indice03, string Indice04, string DataIni, string DataFim, decimal Situacao, string Origem, decimal FolderId) {
            this.ConsultarFoldersAsync(TipoFolder, Indice01, Indice02, Indice03, Indice04, DataIni, DataFim, Situacao, Origem, FolderId, null);
        }
        
        /// <remarks/>
        public void ConsultarFoldersAsync(string TipoFolder, string Indice01, string Indice02, string Indice03, string Indice04, string DataIni, string DataFim, decimal Situacao, string Origem, decimal FolderId, object userState) {
            if ((this.ConsultarFoldersOperationCompleted == null)) {
                this.ConsultarFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultarFoldersOperationCompleted);
            }
            this.InvokeAsync("ConsultarFolders", new object[] {
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        DataIni,
                        DataFim,
                        Situacao,
                        Origem,
                        FolderId}, this.ConsultarFoldersOperationCompleted, userState);
        }
        
        private void OnConsultarFoldersOperationCompleted(object arg) {
            if ((this.ConsultarFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultarFoldersCompleted(this, new ConsultarFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultarFoldersPorUsuario", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConsultarFoldersPorUsuario(decimal ClienteId, string TipoFolder, string Indice01, string Indice02, string Indice03, string Indice04, string DataIni, string DataFim, decimal Situacao, string Origem, decimal FolderId, decimal UsuarioId) {
            object[] results = this.Invoke("ConsultarFoldersPorUsuario", new object[] {
                        ClienteId,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        DataIni,
                        DataFim,
                        Situacao,
                        Origem,
                        FolderId,
                        UsuarioId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultarFoldersPorUsuarioAsync(decimal ClienteId, string TipoFolder, string Indice01, string Indice02, string Indice03, string Indice04, string DataIni, string DataFim, decimal Situacao, string Origem, decimal FolderId, decimal UsuarioId) {
            this.ConsultarFoldersPorUsuarioAsync(ClienteId, TipoFolder, Indice01, Indice02, Indice03, Indice04, DataIni, DataFim, Situacao, Origem, FolderId, UsuarioId, null);
        }
        
        /// <remarks/>
        public void ConsultarFoldersPorUsuarioAsync(decimal ClienteId, string TipoFolder, string Indice01, string Indice02, string Indice03, string Indice04, string DataIni, string DataFim, decimal Situacao, string Origem, decimal FolderId, decimal UsuarioId, object userState) {
            if ((this.ConsultarFoldersPorUsuarioOperationCompleted == null)) {
                this.ConsultarFoldersPorUsuarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultarFoldersPorUsuarioOperationCompleted);
            }
            this.InvokeAsync("ConsultarFoldersPorUsuario", new object[] {
                        ClienteId,
                        TipoFolder,
                        Indice01,
                        Indice02,
                        Indice03,
                        Indice04,
                        DataIni,
                        DataFim,
                        Situacao,
                        Origem,
                        FolderId,
                        UsuarioId}, this.ConsultarFoldersPorUsuarioOperationCompleted, userState);
        }
        
        private void OnConsultarFoldersPorUsuarioOperationCompleted(object arg) {
            if ((this.ConsultarFoldersPorUsuarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultarFoldersPorUsuarioCompleted(this, new ConsultarFoldersPorUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultarDocumentosFolders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConsultarDocumentosFolders(decimal FolderId) {
            object[] results = this.Invoke("ConsultarDocumentosFolders", new object[] {
                        FolderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultarDocumentosFoldersAsync(decimal FolderId) {
            this.ConsultarDocumentosFoldersAsync(FolderId, null);
        }
        
        /// <remarks/>
        public void ConsultarDocumentosFoldersAsync(decimal FolderId, object userState) {
            if ((this.ConsultarDocumentosFoldersOperationCompleted == null)) {
                this.ConsultarDocumentosFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultarDocumentosFoldersOperationCompleted);
            }
            this.InvokeAsync("ConsultarDocumentosFolders", new object[] {
                        FolderId}, this.ConsultarDocumentosFoldersOperationCompleted, userState);
        }
        
        private void OnConsultarDocumentosFoldersOperationCompleted(object arg) {
            if ((this.ConsultarDocumentosFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultarDocumentosFoldersCompleted(this, new ConsultarDocumentosFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultarObservacoesFolders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConsultarObservacoesFolders(decimal FolderId) {
            object[] results = this.Invoke("ConsultarObservacoesFolders", new object[] {
                        FolderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultarObservacoesFoldersAsync(decimal FolderId) {
            this.ConsultarObservacoesFoldersAsync(FolderId, null);
        }
        
        /// <remarks/>
        public void ConsultarObservacoesFoldersAsync(decimal FolderId, object userState) {
            if ((this.ConsultarObservacoesFoldersOperationCompleted == null)) {
                this.ConsultarObservacoesFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultarObservacoesFoldersOperationCompleted);
            }
            this.InvokeAsync("ConsultarObservacoesFolders", new object[] {
                        FolderId}, this.ConsultarObservacoesFoldersOperationCompleted, userState);
        }
        
        private void OnConsultarObservacoesFoldersOperationCompleted(object arg) {
            if ((this.ConsultarObservacoesFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultarObservacoesFoldersCompleted(this, new ConsultarObservacoesFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaChaveTransferencia", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConsultaChaveTransferencia(decimal clienteId, string ChaveTransferencia) {
            object[] results = this.Invoke("ConsultaChaveTransferencia", new object[] {
                        clienteId,
                        ChaveTransferencia});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultaChaveTransferenciaAsync(decimal clienteId, string ChaveTransferencia) {
            this.ConsultaChaveTransferenciaAsync(clienteId, ChaveTransferencia, null);
        }
        
        /// <remarks/>
        public void ConsultaChaveTransferenciaAsync(decimal clienteId, string ChaveTransferencia, object userState) {
            if ((this.ConsultaChaveTransferenciaOperationCompleted == null)) {
                this.ConsultaChaveTransferenciaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultaChaveTransferenciaOperationCompleted);
            }
            this.InvokeAsync("ConsultaChaveTransferencia", new object[] {
                        clienteId,
                        ChaveTransferencia}, this.ConsultaChaveTransferenciaOperationCompleted, userState);
        }
        
        private void OnConsultaChaveTransferenciaOperationCompleted(object arg) {
            if ((this.ConsultaChaveTransferenciaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultaChaveTransferenciaCompleted(this, new ConsultaChaveTransferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VerificaTransferenciaArquivo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool VerificaTransferenciaArquivo(int ClienteId, string Arquivo, long TamanhoArquivo) {
            object[] results = this.Invoke("VerificaTransferenciaArquivo", new object[] {
                        ClienteId,
                        Arquivo,
                        TamanhoArquivo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaTransferenciaArquivoAsync(int ClienteId, string Arquivo, long TamanhoArquivo) {
            this.VerificaTransferenciaArquivoAsync(ClienteId, Arquivo, TamanhoArquivo, null);
        }
        
        /// <remarks/>
        public void VerificaTransferenciaArquivoAsync(int ClienteId, string Arquivo, long TamanhoArquivo, object userState) {
            if ((this.VerificaTransferenciaArquivoOperationCompleted == null)) {
                this.VerificaTransferenciaArquivoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaTransferenciaArquivoOperationCompleted);
            }
            this.InvokeAsync("VerificaTransferenciaArquivo", new object[] {
                        ClienteId,
                        Arquivo,
                        TamanhoArquivo}, this.VerificaTransferenciaArquivoOperationCompleted, userState);
        }
        
        private void OnVerificaTransferenciaArquivoOperationCompleted(object arg) {
            if ((this.VerificaTransferenciaArquivoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaTransferenciaArquivoCompleted(this, new VerificaTransferenciaArquivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscaDigitalizadora", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DOC_DIGITALIZADORA BuscaDigitalizadora(string Cod) {
            object[] results = this.Invoke("BuscaDigitalizadora", new object[] {
                        Cod});
            return ((DOC_DIGITALIZADORA)(results[0]));
        }
        
        /// <remarks/>
        public void BuscaDigitalizadoraAsync(string Cod) {
            this.BuscaDigitalizadoraAsync(Cod, null);
        }
        
        /// <remarks/>
        public void BuscaDigitalizadoraAsync(string Cod, object userState) {
            if ((this.BuscaDigitalizadoraOperationCompleted == null)) {
                this.BuscaDigitalizadoraOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscaDigitalizadoraOperationCompleted);
            }
            this.InvokeAsync("BuscaDigitalizadora", new object[] {
                        Cod}, this.BuscaDigitalizadoraOperationCompleted, userState);
        }
        
        private void OnBuscaDigitalizadoraOperationCompleted(object arg) {
            if ((this.BuscaDigitalizadoraCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscaDigitalizadoraCompleted(this, new BuscaDigitalizadoraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InserirDigitalizadora", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InserirDigitalizadora(string Cod, int ClienteId, string digScannerPadrao, bool digADF, bool digDuplex, bool digMostrarInterface, string TipoImagem, string ProgramaIntegracao) {
            this.Invoke("InserirDigitalizadora", new object[] {
                        Cod,
                        ClienteId,
                        digScannerPadrao,
                        digADF,
                        digDuplex,
                        digMostrarInterface,
                        TipoImagem,
                        ProgramaIntegracao});
        }
        
        /// <remarks/>
        public void InserirDigitalizadoraAsync(string Cod, int ClienteId, string digScannerPadrao, bool digADF, bool digDuplex, bool digMostrarInterface, string TipoImagem, string ProgramaIntegracao) {
            this.InserirDigitalizadoraAsync(Cod, ClienteId, digScannerPadrao, digADF, digDuplex, digMostrarInterface, TipoImagem, ProgramaIntegracao, null);
        }
        
        /// <remarks/>
        public void InserirDigitalizadoraAsync(string Cod, int ClienteId, string digScannerPadrao, bool digADF, bool digDuplex, bool digMostrarInterface, string TipoImagem, string ProgramaIntegracao, object userState) {
            if ((this.InserirDigitalizadoraOperationCompleted == null)) {
                this.InserirDigitalizadoraOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInserirDigitalizadoraOperationCompleted);
            }
            this.InvokeAsync("InserirDigitalizadora", new object[] {
                        Cod,
                        ClienteId,
                        digScannerPadrao,
                        digADF,
                        digDuplex,
                        digMostrarInterface,
                        TipoImagem,
                        ProgramaIntegracao}, this.InserirDigitalizadoraOperationCompleted, userState);
        }
        
        private void OnInserirDigitalizadoraOperationCompleted(object arg) {
            if ((this.InserirDigitalizadoraCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InserirDigitalizadoraCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnviarArquivoTemporario", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EnviarArquivoTemporario(decimal UsuarioId, string NomeArquivo, long Tamanho) {
            this.Invoke("EnviarArquivoTemporario", new object[] {
                        UsuarioId,
                        NomeArquivo,
                        Tamanho});
        }
        
        /// <remarks/>
        public void EnviarArquivoTemporarioAsync(decimal UsuarioId, string NomeArquivo, long Tamanho) {
            this.EnviarArquivoTemporarioAsync(UsuarioId, NomeArquivo, Tamanho, null);
        }
        
        /// <remarks/>
        public void EnviarArquivoTemporarioAsync(decimal UsuarioId, string NomeArquivo, long Tamanho, object userState) {
            if ((this.EnviarArquivoTemporarioOperationCompleted == null)) {
                this.EnviarArquivoTemporarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnviarArquivoTemporarioOperationCompleted);
            }
            this.InvokeAsync("EnviarArquivoTemporario", new object[] {
                        UsuarioId,
                        NomeArquivo,
                        Tamanho}, this.EnviarArquivoTemporarioOperationCompleted, userState);
        }
        
        private void OnEnviarArquivoTemporarioOperationCompleted(object arg) {
            if ((this.EnviarArquivoTemporarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnviarArquivoTemporarioCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnviarArquivoDataCapture", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EnviarArquivoDataCapture(int clienteId, decimal TipoDocumentoId, decimal UsuarioId, string NomeArquivo, long Tamanho, bool QuebraArquivo) {
            this.Invoke("EnviarArquivoDataCapture", new object[] {
                        clienteId,
                        TipoDocumentoId,
                        UsuarioId,
                        NomeArquivo,
                        Tamanho,
                        QuebraArquivo});
        }
        
        /// <remarks/>
        public void EnviarArquivoDataCaptureAsync(int clienteId, decimal TipoDocumentoId, decimal UsuarioId, string NomeArquivo, long Tamanho, bool QuebraArquivo) {
            this.EnviarArquivoDataCaptureAsync(clienteId, TipoDocumentoId, UsuarioId, NomeArquivo, Tamanho, QuebraArquivo, null);
        }
        
        /// <remarks/>
        public void EnviarArquivoDataCaptureAsync(int clienteId, decimal TipoDocumentoId, decimal UsuarioId, string NomeArquivo, long Tamanho, bool QuebraArquivo, object userState) {
            if ((this.EnviarArquivoDataCaptureOperationCompleted == null)) {
                this.EnviarArquivoDataCaptureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnviarArquivoDataCaptureOperationCompleted);
            }
            this.InvokeAsync("EnviarArquivoDataCapture", new object[] {
                        clienteId,
                        TipoDocumentoId,
                        UsuarioId,
                        NomeArquivo,
                        Tamanho,
                        QuebraArquivo}, this.EnviarArquivoDataCaptureOperationCompleted, userState);
        }
        
        private void OnEnviarArquivoDataCaptureOperationCompleted(object arg) {
            if ((this.EnviarArquivoDataCaptureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnviarArquivoDataCaptureCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscarObjetosClienteUsuario", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscarObjetosClienteUsuario(decimal PerfilUsuarioId) {
            object[] results = this.Invoke("BuscarObjetosClienteUsuario", new object[] {
                        PerfilUsuarioId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscarObjetosClienteUsuarioAsync(decimal PerfilUsuarioId) {
            this.BuscarObjetosClienteUsuarioAsync(PerfilUsuarioId, null);
        }
        
        /// <remarks/>
        public void BuscarObjetosClienteUsuarioAsync(decimal PerfilUsuarioId, object userState) {
            if ((this.BuscarObjetosClienteUsuarioOperationCompleted == null)) {
                this.BuscarObjetosClienteUsuarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscarObjetosClienteUsuarioOperationCompleted);
            }
            this.InvokeAsync("BuscarObjetosClienteUsuario", new object[] {
                        PerfilUsuarioId}, this.BuscarObjetosClienteUsuarioOperationCompleted, userState);
        }
        
        private void OnBuscarObjetosClienteUsuarioOperationCompleted(object arg) {
            if ((this.BuscarObjetosClienteUsuarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscarObjetosClienteUsuarioCompleted(this, new BuscarObjetosClienteUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscarObjetosClienteUsuarioPerfil", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscarObjetosClienteUsuarioPerfil(decimal UsuarioId, decimal PerfilUsuarioId) {
            object[] results = this.Invoke("BuscarObjetosClienteUsuarioPerfil", new object[] {
                        UsuarioId,
                        PerfilUsuarioId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscarObjetosClienteUsuarioPerfilAsync(decimal UsuarioId, decimal PerfilUsuarioId) {
            this.BuscarObjetosClienteUsuarioPerfilAsync(UsuarioId, PerfilUsuarioId, null);
        }
        
        /// <remarks/>
        public void BuscarObjetosClienteUsuarioPerfilAsync(decimal UsuarioId, decimal PerfilUsuarioId, object userState) {
            if ((this.BuscarObjetosClienteUsuarioPerfilOperationCompleted == null)) {
                this.BuscarObjetosClienteUsuarioPerfilOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscarObjetosClienteUsuarioPerfilOperationCompleted);
            }
            this.InvokeAsync("BuscarObjetosClienteUsuarioPerfil", new object[] {
                        UsuarioId,
                        PerfilUsuarioId}, this.BuscarObjetosClienteUsuarioPerfilOperationCompleted, userState);
        }
        
        private void OnBuscarObjetosClienteUsuarioPerfilOperationCompleted(object arg) {
            if ((this.BuscarObjetosClienteUsuarioPerfilCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscarObjetosClienteUsuarioPerfilCompleted(this, new BuscarObjetosClienteUsuarioPerfilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscaSituacaoDocumento", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscaSituacaoDocumento(decimal TipoDocumento) {
            object[] results = this.Invoke("BuscaSituacaoDocumento", new object[] {
                        TipoDocumento});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscaSituacaoDocumentoAsync(decimal TipoDocumento) {
            this.BuscaSituacaoDocumentoAsync(TipoDocumento, null);
        }
        
        /// <remarks/>
        public void BuscaSituacaoDocumentoAsync(decimal TipoDocumento, object userState) {
            if ((this.BuscaSituacaoDocumentoOperationCompleted == null)) {
                this.BuscaSituacaoDocumentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscaSituacaoDocumentoOperationCompleted);
            }
            this.InvokeAsync("BuscaSituacaoDocumento", new object[] {
                        TipoDocumento}, this.BuscaSituacaoDocumentoOperationCompleted, userState);
        }
        
        private void OnBuscaSituacaoDocumentoOperationCompleted(object arg) {
            if ((this.BuscaSituacaoDocumentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscaSituacaoDocumentoCompleted(this, new BuscaSituacaoDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VerificaAtivacao", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool VerificaAtivacao(string HashHardWare, string HashAtivacao) {
            object[] results = this.Invoke("VerificaAtivacao", new object[] {
                        HashHardWare,
                        HashAtivacao});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaAtivacaoAsync(string HashHardWare, string HashAtivacao) {
            this.VerificaAtivacaoAsync(HashHardWare, HashAtivacao, null);
        }
        
        /// <remarks/>
        public void VerificaAtivacaoAsync(string HashHardWare, string HashAtivacao, object userState) {
            if ((this.VerificaAtivacaoOperationCompleted == null)) {
                this.VerificaAtivacaoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaAtivacaoOperationCompleted);
            }
            this.InvokeAsync("VerificaAtivacao", new object[] {
                        HashHardWare,
                        HashAtivacao}, this.VerificaAtivacaoOperationCompleted, userState);
        }
        
        private void OnVerificaAtivacaoOperationCompleted(object arg) {
            if ((this.VerificaAtivacaoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaAtivacaoCompleted(this, new VerificaAtivacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscarLoteIndexacao", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscarLoteIndexacao(decimal UsuarioId, decimal ClienteId, decimal TipoFolderId, decimal ClienteDocId, string Competencia) {
            object[] results = this.Invoke("BuscarLoteIndexacao", new object[] {
                        UsuarioId,
                        ClienteId,
                        TipoFolderId,
                        ClienteDocId,
                        Competencia});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscarLoteIndexacaoAsync(decimal UsuarioId, decimal ClienteId, decimal TipoFolderId, decimal ClienteDocId, string Competencia) {
            this.BuscarLoteIndexacaoAsync(UsuarioId, ClienteId, TipoFolderId, ClienteDocId, Competencia, null);
        }
        
        /// <remarks/>
        public void BuscarLoteIndexacaoAsync(decimal UsuarioId, decimal ClienteId, decimal TipoFolderId, decimal ClienteDocId, string Competencia, object userState) {
            if ((this.BuscarLoteIndexacaoOperationCompleted == null)) {
                this.BuscarLoteIndexacaoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscarLoteIndexacaoOperationCompleted);
            }
            this.InvokeAsync("BuscarLoteIndexacao", new object[] {
                        UsuarioId,
                        ClienteId,
                        TipoFolderId,
                        ClienteDocId,
                        Competencia}, this.BuscarLoteIndexacaoOperationCompleted, userState);
        }
        
        private void OnBuscarLoteIndexacaoOperationCompleted(object arg) {
            if ((this.BuscarLoteIndexacaoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscarLoteIndexacaoCompleted(this, new BuscarLoteIndexacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GravarFolderProcessoCQ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GravarFolderProcessoCQ(string Arquivo, decimal UsuarioId, decimal TipoFolder, decimal ClienteOrigem, string Competencia, long TamanhoArquivo, int QtdeFoldes, string DiretorioImagens, string[] Arquivos, char Situacao) {
            object[] results = this.Invoke("GravarFolderProcessoCQ", new object[] {
                        Arquivo,
                        UsuarioId,
                        TipoFolder,
                        ClienteOrigem,
                        Competencia,
                        TamanhoArquivo,
                        QtdeFoldes,
                        DiretorioImagens,
                        Arquivos,
                        Situacao});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GravarFolderProcessoCQAsync(string Arquivo, decimal UsuarioId, decimal TipoFolder, decimal ClienteOrigem, string Competencia, long TamanhoArquivo, int QtdeFoldes, string DiretorioImagens, string[] Arquivos, char Situacao) {
            this.GravarFolderProcessoCQAsync(Arquivo, UsuarioId, TipoFolder, ClienteOrigem, Competencia, TamanhoArquivo, QtdeFoldes, DiretorioImagens, Arquivos, Situacao, null);
        }
        
        /// <remarks/>
        public void GravarFolderProcessoCQAsync(string Arquivo, decimal UsuarioId, decimal TipoFolder, decimal ClienteOrigem, string Competencia, long TamanhoArquivo, int QtdeFoldes, string DiretorioImagens, string[] Arquivos, char Situacao, object userState) {
            if ((this.GravarFolderProcessoCQOperationCompleted == null)) {
                this.GravarFolderProcessoCQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGravarFolderProcessoCQOperationCompleted);
            }
            this.InvokeAsync("GravarFolderProcessoCQ", new object[] {
                        Arquivo,
                        UsuarioId,
                        TipoFolder,
                        ClienteOrigem,
                        Competencia,
                        TamanhoArquivo,
                        QtdeFoldes,
                        DiretorioImagens,
                        Arquivos,
                        Situacao}, this.GravarFolderProcessoCQOperationCompleted, userState);
        }
        
        private void OnGravarFolderProcessoCQOperationCompleted(object arg) {
            if ((this.GravarFolderProcessoCQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GravarFolderProcessoCQCompleted(this, new GravarFolderProcessoCQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AtualizaSituacaoFolderProcesso", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AtualizaSituacaoFolderProcesso(decimal fldId, char Situacao) {
            this.Invoke("AtualizaSituacaoFolderProcesso", new object[] {
                        fldId,
                        Situacao});
        }
        
        /// <remarks/>
        public void AtualizaSituacaoFolderProcessoAsync(decimal fldId, char Situacao) {
            this.AtualizaSituacaoFolderProcessoAsync(fldId, Situacao, null);
        }
        
        /// <remarks/>
        public void AtualizaSituacaoFolderProcessoAsync(decimal fldId, char Situacao, object userState) {
            if ((this.AtualizaSituacaoFolderProcessoOperationCompleted == null)) {
                this.AtualizaSituacaoFolderProcessoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAtualizaSituacaoFolderProcessoOperationCompleted);
            }
            this.InvokeAsync("AtualizaSituacaoFolderProcesso", new object[] {
                        fldId,
                        Situacao}, this.AtualizaSituacaoFolderProcessoOperationCompleted, userState);
        }
        
        private void OnAtualizaSituacaoFolderProcessoOperationCompleted(object arg) {
            if ((this.AtualizaSituacaoFolderProcessoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AtualizaSituacaoFolderProcessoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListaFoldersProcessoFiltroCQ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListaFoldersProcessoFiltroCQ(decimal ClienteId, decimal ClienteDocumentoId, decimal UsuarioId, string Competencia) {
            object[] results = this.Invoke("ListaFoldersProcessoFiltroCQ", new object[] {
                        ClienteId,
                        ClienteDocumentoId,
                        UsuarioId,
                        Competencia});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListaFoldersProcessoFiltroCQAsync(decimal ClienteId, decimal ClienteDocumentoId, decimal UsuarioId, string Competencia) {
            this.ListaFoldersProcessoFiltroCQAsync(ClienteId, ClienteDocumentoId, UsuarioId, Competencia, null);
        }
        
        /// <remarks/>
        public void ListaFoldersProcessoFiltroCQAsync(decimal ClienteId, decimal ClienteDocumentoId, decimal UsuarioId, string Competencia, object userState) {
            if ((this.ListaFoldersProcessoFiltroCQOperationCompleted == null)) {
                this.ListaFoldersProcessoFiltroCQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListaFoldersProcessoFiltroCQOperationCompleted);
            }
            this.InvokeAsync("ListaFoldersProcessoFiltroCQ", new object[] {
                        ClienteId,
                        ClienteDocumentoId,
                        UsuarioId,
                        Competencia}, this.ListaFoldersProcessoFiltroCQOperationCompleted, userState);
        }
        
        private void OnListaFoldersProcessoFiltroCQOperationCompleted(object arg) {
            if ((this.ListaFoldersProcessoFiltroCQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListaFoldersProcessoFiltroCQCompleted(this, new ListaFoldersProcessoFiltroCQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnviarArquivos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EnviarArquivos(string FileName, string Estrutura, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] buffer, long Offset) {
            object[] results = this.Invoke("EnviarArquivos", new object[] {
                        FileName,
                        Estrutura,
                        buffer,
                        Offset});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EnviarArquivosAsync(string FileName, string Estrutura, byte[] buffer, long Offset) {
            this.EnviarArquivosAsync(FileName, Estrutura, buffer, Offset, null);
        }
        
        /// <remarks/>
        public void EnviarArquivosAsync(string FileName, string Estrutura, byte[] buffer, long Offset, object userState) {
            if ((this.EnviarArquivosOperationCompleted == null)) {
                this.EnviarArquivosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnviarArquivosOperationCompleted);
            }
            this.InvokeAsync("EnviarArquivos", new object[] {
                        FileName,
                        Estrutura,
                        buffer,
                        Offset}, this.EnviarArquivosOperationCompleted, userState);
        }
        
        private void OnEnviarArquivosOperationCompleted(object arg) {
            if ((this.EnviarArquivosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnviarArquivosCompleted(this, new EnviarArquivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VerificaServidorExterno", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool VerificaServidorExterno(string Guid) {
            object[] results = this.Invoke("VerificaServidorExterno", new object[] {
                        Guid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaServidorExternoAsync(string Guid) {
            this.VerificaServidorExternoAsync(Guid, null);
        }
        
        /// <remarks/>
        public void VerificaServidorExternoAsync(string Guid, object userState) {
            if ((this.VerificaServidorExternoOperationCompleted == null)) {
                this.VerificaServidorExternoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaServidorExternoOperationCompleted);
            }
            this.InvokeAsync("VerificaServidorExterno", new object[] {
                        Guid}, this.VerificaServidorExternoOperationCompleted, userState);
        }
        
        private void OnVerificaServidorExternoOperationCompleted(object arg) {
            if ((this.VerificaServidorExternoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaServidorExternoCompleted(this, new VerificaServidorExternoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BuscarMeusDocumetos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BuscarMeusDocumetos(decimal UsuarioId, string Ordem) {
            object[] results = this.Invoke("BuscarMeusDocumetos", new object[] {
                        UsuarioId,
                        Ordem});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BuscarMeusDocumetosAsync(decimal UsuarioId, string Ordem) {
            this.BuscarMeusDocumetosAsync(UsuarioId, Ordem, null);
        }
        
        /// <remarks/>
        public void BuscarMeusDocumetosAsync(decimal UsuarioId, string Ordem, object userState) {
            if ((this.BuscarMeusDocumetosOperationCompleted == null)) {
                this.BuscarMeusDocumetosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscarMeusDocumetosOperationCompleted);
            }
            this.InvokeAsync("BuscarMeusDocumetos", new object[] {
                        UsuarioId,
                        Ordem}, this.BuscarMeusDocumetosOperationCompleted, userState);
        }
        
        private void OnBuscarMeusDocumetosOperationCompleted(object arg) {
            if ((this.BuscarMeusDocumetosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuscarMeusDocumetosCompleted(this, new BuscarMeusDocumetosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CadastrarAlerta", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CadastrarAlerta(string descricao, System.DateTime dataAviso, string emailAviso, string mensagem, int qtdDias, decimal fldId) {
            this.Invoke("CadastrarAlerta", new object[] {
                        descricao,
                        dataAviso,
                        emailAviso,
                        mensagem,
                        qtdDias,
                        fldId});
        }
        
        /// <remarks/>
        public void CadastrarAlertaAsync(string descricao, System.DateTime dataAviso, string emailAviso, string mensagem, int qtdDias, decimal fldId) {
            this.CadastrarAlertaAsync(descricao, dataAviso, emailAviso, mensagem, qtdDias, fldId, null);
        }
        
        /// <remarks/>
        public void CadastrarAlertaAsync(string descricao, System.DateTime dataAviso, string emailAviso, string mensagem, int qtdDias, decimal fldId, object userState) {
            if ((this.CadastrarAlertaOperationCompleted == null)) {
                this.CadastrarAlertaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCadastrarAlertaOperationCompleted);
            }
            this.InvokeAsync("CadastrarAlerta", new object[] {
                        descricao,
                        dataAviso,
                        emailAviso,
                        mensagem,
                        qtdDias,
                        fldId}, this.CadastrarAlertaOperationCompleted, userState);
        }
        
        private void OnCadastrarAlertaOperationCompleted(object arg) {
            if ((this.CadastrarAlertaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CadastrarAlertaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaPermissoes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConsultaPermissoes(decimal tipoFolderId, decimal usuarioId) {
            object[] results = this.Invoke("ConsultaPermissoes", new object[] {
                        tipoFolderId,
                        usuarioId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultaPermissoesAsync(decimal tipoFolderId, decimal usuarioId) {
            this.ConsultaPermissoesAsync(tipoFolderId, usuarioId, null);
        }
        
        /// <remarks/>
        public void ConsultaPermissoesAsync(decimal tipoFolderId, decimal usuarioId, object userState) {
            if ((this.ConsultaPermissoesOperationCompleted == null)) {
                this.ConsultaPermissoesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultaPermissoesOperationCompleted);
            }
            this.InvokeAsync("ConsultaPermissoes", new object[] {
                        tipoFolderId,
                        usuarioId}, this.ConsultaPermissoesOperationCompleted, userState);
        }
        
        private void OnConsultaPermissoesOperationCompleted(object arg) {
            if ((this.ConsultaPermissoesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultaPermissoesCompleted(this, new ConsultaPermissoesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultarAssinaturas", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConsultarAssinaturas(decimal docid) {
            object[] results = this.Invoke("ConsultarAssinaturas", new object[] {
                        docid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultarAssinaturasAsync(decimal docid) {
            this.ConsultarAssinaturasAsync(docid, null);
        }
        
        /// <remarks/>
        public void ConsultarAssinaturasAsync(decimal docid, object userState) {
            if ((this.ConsultarAssinaturasOperationCompleted == null)) {
                this.ConsultarAssinaturasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultarAssinaturasOperationCompleted);
            }
            this.InvokeAsync("ConsultarAssinaturas", new object[] {
                        docid}, this.ConsultarAssinaturasOperationCompleted, userState);
        }
        
        private void OnConsultarAssinaturasOperationCompleted(object arg) {
            if ((this.ConsultarAssinaturasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultarAssinaturasCompleted(this, new ConsultarAssinaturasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultarSolicitacaoDocumentoAberta", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConsultarSolicitacaoDocumentoAberta(decimal docid) {
            object[] results = this.Invoke("ConsultarSolicitacaoDocumentoAberta", new object[] {
                        docid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultarSolicitacaoDocumentoAbertaAsync(decimal docid) {
            this.ConsultarSolicitacaoDocumentoAbertaAsync(docid, null);
        }
        
        /// <remarks/>
        public void ConsultarSolicitacaoDocumentoAbertaAsync(decimal docid, object userState) {
            if ((this.ConsultarSolicitacaoDocumentoAbertaOperationCompleted == null)) {
                this.ConsultarSolicitacaoDocumentoAbertaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultarSolicitacaoDocumentoAbertaOperationCompleted);
            }
            this.InvokeAsync("ConsultarSolicitacaoDocumentoAberta", new object[] {
                        docid}, this.ConsultarSolicitacaoDocumentoAbertaOperationCompleted, userState);
        }
        
        private void OnConsultarSolicitacaoDocumentoAbertaOperationCompleted(object arg) {
            if ((this.ConsultarSolicitacaoDocumentoAbertaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultarSolicitacaoDocumentoAbertaCompleted(this, new ConsultarSolicitacaoDocumentoAbertaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MultiplasAssinaturas", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MultiplasAssinaturas(decimal docid) {
            object[] results = this.Invoke("MultiplasAssinaturas", new object[] {
                        docid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MultiplasAssinaturasAsync(decimal docid) {
            this.MultiplasAssinaturasAsync(docid, null);
        }
        
        /// <remarks/>
        public void MultiplasAssinaturasAsync(decimal docid, object userState) {
            if ((this.MultiplasAssinaturasOperationCompleted == null)) {
                this.MultiplasAssinaturasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMultiplasAssinaturasOperationCompleted);
            }
            this.InvokeAsync("MultiplasAssinaturas", new object[] {
                        docid}, this.MultiplasAssinaturasOperationCompleted, userState);
        }
        
        private void OnMultiplasAssinaturasOperationCompleted(object arg) {
            if ((this.MultiplasAssinaturasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MultiplasAssinaturasCompleted(this, new MultiplasAssinaturasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultarAreasAssinaturas", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConsultarAreasAssinaturas(decimal tpdId) {
            object[] results = this.Invoke("ConsultarAreasAssinaturas", new object[] {
                        tpdId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultarAreasAssinaturasAsync(decimal tpdId) {
            this.ConsultarAreasAssinaturasAsync(tpdId, null);
        }
        
        /// <remarks/>
        public void ConsultarAreasAssinaturasAsync(decimal tpdId, object userState) {
            if ((this.ConsultarAreasAssinaturasOperationCompleted == null)) {
                this.ConsultarAreasAssinaturasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultarAreasAssinaturasOperationCompleted);
            }
            this.InvokeAsync("ConsultarAreasAssinaturas", new object[] {
                        tpdId}, this.ConsultarAreasAssinaturasOperationCompleted, userState);
        }
        
        private void OnConsultarAreasAssinaturasOperationCompleted(object arg) {
            if ((this.ConsultarAreasAssinaturasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultarAreasAssinaturasCompleted(this, new ConsultarAreasAssinaturasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultarDocumento", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConsultarDocumento(decimal DocId) {
            object[] results = this.Invoke("ConsultarDocumento", new object[] {
                        DocId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultarDocumentoAsync(decimal DocId) {
            this.ConsultarDocumentoAsync(DocId, null);
        }
        
        /// <remarks/>
        public void ConsultarDocumentoAsync(decimal DocId, object userState) {
            if ((this.ConsultarDocumentoOperationCompleted == null)) {
                this.ConsultarDocumentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultarDocumentoOperationCompleted);
            }
            this.InvokeAsync("ConsultarDocumento", new object[] {
                        DocId}, this.ConsultarDocumentoOperationCompleted, userState);
        }
        
        private void OnConsultarDocumentoOperationCompleted(object arg) {
            if ((this.ConsultarDocumentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultarDocumentoCompleted(this, new ConsultarDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CriarNovaVersaoAssinatura", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CriarNovaVersaoAssinatura(string caminhoArquivo, decimal Docid, int ClienteId, string NomeArquivo, long tamanhoArquivo, int iTotalPaginas, decimal usuarioId, string origemUser) {
            object[] results = this.Invoke("CriarNovaVersaoAssinatura", new object[] {
                        caminhoArquivo,
                        Docid,
                        ClienteId,
                        NomeArquivo,
                        tamanhoArquivo,
                        iTotalPaginas,
                        usuarioId,
                        origemUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CriarNovaVersaoAssinaturaAsync(string caminhoArquivo, decimal Docid, int ClienteId, string NomeArquivo, long tamanhoArquivo, int iTotalPaginas, decimal usuarioId, string origemUser) {
            this.CriarNovaVersaoAssinaturaAsync(caminhoArquivo, Docid, ClienteId, NomeArquivo, tamanhoArquivo, iTotalPaginas, usuarioId, origemUser, null);
        }
        
        /// <remarks/>
        public void CriarNovaVersaoAssinaturaAsync(string caminhoArquivo, decimal Docid, int ClienteId, string NomeArquivo, long tamanhoArquivo, int iTotalPaginas, decimal usuarioId, string origemUser, object userState) {
            if ((this.CriarNovaVersaoAssinaturaOperationCompleted == null)) {
                this.CriarNovaVersaoAssinaturaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCriarNovaVersaoAssinaturaOperationCompleted);
            }
            this.InvokeAsync("CriarNovaVersaoAssinatura", new object[] {
                        caminhoArquivo,
                        Docid,
                        ClienteId,
                        NomeArquivo,
                        tamanhoArquivo,
                        iTotalPaginas,
                        usuarioId,
                        origemUser}, this.CriarNovaVersaoAssinaturaOperationCompleted, userState);
        }
        
        private void OnCriarNovaVersaoAssinaturaOperationCompleted(object arg) {
            if ((this.CriarNovaVersaoAssinaturaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CriarNovaVersaoAssinaturaCompleted(this, new CriarNovaVersaoAssinaturaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultarCliente", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConsultarCliente(decimal CliId) {
            object[] results = this.Invoke("ConsultarCliente", new object[] {
                        CliId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultarClienteAsync(decimal CliId) {
            this.ConsultarClienteAsync(CliId, null);
        }
        
        /// <remarks/>
        public void ConsultarClienteAsync(decimal CliId, object userState) {
            if ((this.ConsultarClienteOperationCompleted == null)) {
                this.ConsultarClienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultarClienteOperationCompleted);
            }
            this.InvokeAsync("ConsultarCliente", new object[] {
                        CliId}, this.ConsultarClienteOperationCompleted, userState);
        }
        
        private void OnConsultarClienteOperationCompleted(object arg) {
            if ((this.ConsultarClienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultarClienteCompleted(this, new ConsultarClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultarListaGenerica", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConsultarListaGenerica(int CliId, string Tipo) {
            object[] results = this.Invoke("ConsultarListaGenerica", new object[] {
                        CliId,
                        Tipo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultarListaGenericaAsync(int CliId, string Tipo) {
            this.ConsultarListaGenericaAsync(CliId, Tipo, null);
        }
        
        /// <remarks/>
        public void ConsultarListaGenericaAsync(int CliId, string Tipo, object userState) {
            if ((this.ConsultarListaGenericaOperationCompleted == null)) {
                this.ConsultarListaGenericaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultarListaGenericaOperationCompleted);
            }
            this.InvokeAsync("ConsultarListaGenerica", new object[] {
                        CliId,
                        Tipo}, this.ConsultarListaGenericaOperationCompleted, userState);
        }
        
        private void OnConsultarListaGenericaOperationCompleted(object arg) {
            if ((this.ConsultarListaGenericaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultarListaGenericaCompleted(this, new ConsultarListaGenericaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultarTabelaTemporaridade", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConsultarTabelaTemporaridade(int CliId) {
            object[] results = this.Invoke("ConsultarTabelaTemporaridade", new object[] {
                        CliId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultarTabelaTemporaridadeAsync(int CliId) {
            this.ConsultarTabelaTemporaridadeAsync(CliId, null);
        }
        
        /// <remarks/>
        public void ConsultarTabelaTemporaridadeAsync(int CliId, object userState) {
            if ((this.ConsultarTabelaTemporaridadeOperationCompleted == null)) {
                this.ConsultarTabelaTemporaridadeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultarTabelaTemporaridadeOperationCompleted);
            }
            this.InvokeAsync("ConsultarTabelaTemporaridade", new object[] {
                        CliId}, this.ConsultarTabelaTemporaridadeOperationCompleted, userState);
        }
        
        private void OnConsultarTabelaTemporaridadeOperationCompleted(object arg) {
            if ((this.ConsultarTabelaTemporaridadeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultarTabelaTemporaridadeCompleted(this, new ConsultarTabelaTemporaridadeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string keyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DOC_DIGITALIZADORA {
        
        private string digCodField;
        
        private int cLIIDField;
        
        private string digScannerPadraoField;
        
        private bool digADFField;
        
        private bool digDuplexField;
        
        private bool digMostrarInterfaceField;
        
        private string digProgramaCapturaField;
        
        private int digTipoImagemField;
        
        /// <remarks/>
        public string digCod {
            get {
                return this.digCodField;
            }
            set {
                this.digCodField = value;
            }
        }
        
        /// <remarks/>
        public int CLIID {
            get {
                return this.cLIIDField;
            }
            set {
                this.cLIIDField = value;
            }
        }
        
        /// <remarks/>
        public string digScannerPadrao {
            get {
                return this.digScannerPadraoField;
            }
            set {
                this.digScannerPadraoField = value;
            }
        }
        
        /// <remarks/>
        public bool digADF {
            get {
                return this.digADFField;
            }
            set {
                this.digADFField = value;
            }
        }
        
        /// <remarks/>
        public bool digDuplex {
            get {
                return this.digDuplexField;
            }
            set {
                this.digDuplexField = value;
            }
        }
        
        /// <remarks/>
        public bool digMostrarInterface {
            get {
                return this.digMostrarInterfaceField;
            }
            set {
                this.digMostrarInterfaceField = value;
            }
        }
        
        /// <remarks/>
        public string digProgramaCaptura {
            get {
                return this.digProgramaCapturaField;
            }
            set {
                this.digProgramaCapturaField = value;
            }
        }
        
        /// <remarks/>
        public int digTipoImagem {
            get {
                return this.digTipoImagemField;
            }
            set {
                this.digTipoImagemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DOC_USUARIOEXTERNO {
        
        private decimal uSEIDField;
        
        private int cLIIDField;
        
        private string uSELOGINField;
        
        private string uSENOMEField;
        
        private string uSESENHAField;
        
        private string uSEMATRICULAField;
        
        private string uSEEMAILField;
        
        private string uSESITUACAOField;
        
        private string uSERGField;
        
        private string uSEENDERECOField;
        
        private string uSEBAIRROField;
        
        private string uSECEPField;
        
        private string uSECIDADEField;
        
        private string uSEESTADOField;
        
        private string uSETELEFONEField;
        
        private string uSERAZAOSOCIALField;
        
        private string uSECNPJField;
        
        private string uSECARGOField;
        
        private System.DateTime uSEDATAHORACRIACAOField;
        
        private bool uSETERMOACEITEField;
        
        private System.DateTime uSEDATAHORATERMOACEITEField;
        
        private string uSEIPACESSOACEITEField;
        
        private bool uSEALTERASENHAField;
        
        private bool uSEPREVIEWDOCField;
        
        /// <remarks/>
        public decimal USEID {
            get {
                return this.uSEIDField;
            }
            set {
                this.uSEIDField = value;
            }
        }
        
        /// <remarks/>
        public int CLIID {
            get {
                return this.cLIIDField;
            }
            set {
                this.cLIIDField = value;
            }
        }
        
        /// <remarks/>
        public string USELOGIN {
            get {
                return this.uSELOGINField;
            }
            set {
                this.uSELOGINField = value;
            }
        }
        
        /// <remarks/>
        public string USENOME {
            get {
                return this.uSENOMEField;
            }
            set {
                this.uSENOMEField = value;
            }
        }
        
        /// <remarks/>
        public string USESENHA {
            get {
                return this.uSESENHAField;
            }
            set {
                this.uSESENHAField = value;
            }
        }
        
        /// <remarks/>
        public string USEMATRICULA {
            get {
                return this.uSEMATRICULAField;
            }
            set {
                this.uSEMATRICULAField = value;
            }
        }
        
        /// <remarks/>
        public string USEEMAIL {
            get {
                return this.uSEEMAILField;
            }
            set {
                this.uSEEMAILField = value;
            }
        }
        
        /// <remarks/>
        public string USESITUACAO {
            get {
                return this.uSESITUACAOField;
            }
            set {
                this.uSESITUACAOField = value;
            }
        }
        
        /// <remarks/>
        public string USERG {
            get {
                return this.uSERGField;
            }
            set {
                this.uSERGField = value;
            }
        }
        
        /// <remarks/>
        public string USEENDERECO {
            get {
                return this.uSEENDERECOField;
            }
            set {
                this.uSEENDERECOField = value;
            }
        }
        
        /// <remarks/>
        public string USEBAIRRO {
            get {
                return this.uSEBAIRROField;
            }
            set {
                this.uSEBAIRROField = value;
            }
        }
        
        /// <remarks/>
        public string USECEP {
            get {
                return this.uSECEPField;
            }
            set {
                this.uSECEPField = value;
            }
        }
        
        /// <remarks/>
        public string USECIDADE {
            get {
                return this.uSECIDADEField;
            }
            set {
                this.uSECIDADEField = value;
            }
        }
        
        /// <remarks/>
        public string USEESTADO {
            get {
                return this.uSEESTADOField;
            }
            set {
                this.uSEESTADOField = value;
            }
        }
        
        /// <remarks/>
        public string USETELEFONE {
            get {
                return this.uSETELEFONEField;
            }
            set {
                this.uSETELEFONEField = value;
            }
        }
        
        /// <remarks/>
        public string USERAZAOSOCIAL {
            get {
                return this.uSERAZAOSOCIALField;
            }
            set {
                this.uSERAZAOSOCIALField = value;
            }
        }
        
        /// <remarks/>
        public string USECNPJ {
            get {
                return this.uSECNPJField;
            }
            set {
                this.uSECNPJField = value;
            }
        }
        
        /// <remarks/>
        public string USECARGO {
            get {
                return this.uSECARGOField;
            }
            set {
                this.uSECARGOField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime USEDATAHORACRIACAO {
            get {
                return this.uSEDATAHORACRIACAOField;
            }
            set {
                this.uSEDATAHORACRIACAOField = value;
            }
        }
        
        /// <remarks/>
        public bool USETERMOACEITE {
            get {
                return this.uSETERMOACEITEField;
            }
            set {
                this.uSETERMOACEITEField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime USEDATAHORATERMOACEITE {
            get {
                return this.uSEDATAHORATERMOACEITEField;
            }
            set {
                this.uSEDATAHORATERMOACEITEField = value;
            }
        }
        
        /// <remarks/>
        public string USEIPACESSOACEITE {
            get {
                return this.uSEIPACESSOACEITEField;
            }
            set {
                this.uSEIPACESSOACEITEField = value;
            }
        }
        
        /// <remarks/>
        public bool USEALTERASENHA {
            get {
                return this.uSEALTERASENHAField;
            }
            set {
                this.uSEALTERASENHAField = value;
            }
        }
        
        /// <remarks/>
        public bool USEPREVIEWDOC {
            get {
                return this.uSEPREVIEWDOCField;
            }
            set {
                this.uSEPREVIEWDOCField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class USUARIO {
        
        private decimal uSUIDField;
        
        private decimal pCLIDField;
        
        private string uSULOGINField;
        
        private string uSUEMAILField;
        
        private string uSUNOMECOMPLETOField;
        
        private string uSUSENHAField;
        
        private System.DateTime uSUDATAHORACRIACAOField;
        
        private bool uSUATIVOField;
        
        private bool aDMINField;
        
        private bool uSUBLOQUEIOETAPASField;
        
        private decimal uSUIDCLIENTEField;
        
        private bool uSUALTERASENHAField;
        
        private bool uSUBLOQUEIOHORARIOField;
        
        private bool uSUCONSULTASUAField;
        
        private decimal cliDocIdField;
        
        private bool uSUASSINADOCSField;
        
        private string uSUCERTIFICADODIGITALField;
        
        private string uSUSENHACERTIFICADOField;
        
        private bool uSUIGNORAORIGEMFILAField;
        
        private string uSUPROFISSAOField;
        
        private string uSUTELEFONEField;
        
        private string uSUCPFField;
        
        private bool uSUPREVIEWDOCField;
        
        /// <remarks/>
        public decimal USUID {
            get {
                return this.uSUIDField;
            }
            set {
                this.uSUIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal PCLID {
            get {
                return this.pCLIDField;
            }
            set {
                this.pCLIDField = value;
            }
        }
        
        /// <remarks/>
        public string USULOGIN {
            get {
                return this.uSULOGINField;
            }
            set {
                this.uSULOGINField = value;
            }
        }
        
        /// <remarks/>
        public string USUEMAIL {
            get {
                return this.uSUEMAILField;
            }
            set {
                this.uSUEMAILField = value;
            }
        }
        
        /// <remarks/>
        public string USUNOMECOMPLETO {
            get {
                return this.uSUNOMECOMPLETOField;
            }
            set {
                this.uSUNOMECOMPLETOField = value;
            }
        }
        
        /// <remarks/>
        public string USUSENHA {
            get {
                return this.uSUSENHAField;
            }
            set {
                this.uSUSENHAField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime USUDATAHORACRIACAO {
            get {
                return this.uSUDATAHORACRIACAOField;
            }
            set {
                this.uSUDATAHORACRIACAOField = value;
            }
        }
        
        /// <remarks/>
        public bool USUATIVO {
            get {
                return this.uSUATIVOField;
            }
            set {
                this.uSUATIVOField = value;
            }
        }
        
        /// <remarks/>
        public bool ADMIN {
            get {
                return this.aDMINField;
            }
            set {
                this.aDMINField = value;
            }
        }
        
        /// <remarks/>
        public bool USUBLOQUEIOETAPAS {
            get {
                return this.uSUBLOQUEIOETAPASField;
            }
            set {
                this.uSUBLOQUEIOETAPASField = value;
            }
        }
        
        /// <remarks/>
        public decimal USUIDCLIENTE {
            get {
                return this.uSUIDCLIENTEField;
            }
            set {
                this.uSUIDCLIENTEField = value;
            }
        }
        
        /// <remarks/>
        public bool USUALTERASENHA {
            get {
                return this.uSUALTERASENHAField;
            }
            set {
                this.uSUALTERASENHAField = value;
            }
        }
        
        /// <remarks/>
        public bool USUBLOQUEIOHORARIO {
            get {
                return this.uSUBLOQUEIOHORARIOField;
            }
            set {
                this.uSUBLOQUEIOHORARIOField = value;
            }
        }
        
        /// <remarks/>
        public bool USUCONSULTASUA {
            get {
                return this.uSUCONSULTASUAField;
            }
            set {
                this.uSUCONSULTASUAField = value;
            }
        }
        
        /// <remarks/>
        public decimal cliDocId {
            get {
                return this.cliDocIdField;
            }
            set {
                this.cliDocIdField = value;
            }
        }
        
        /// <remarks/>
        public bool USUASSINADOCS {
            get {
                return this.uSUASSINADOCSField;
            }
            set {
                this.uSUASSINADOCSField = value;
            }
        }
        
        /// <remarks/>
        public string USUCERTIFICADODIGITAL {
            get {
                return this.uSUCERTIFICADODIGITALField;
            }
            set {
                this.uSUCERTIFICADODIGITALField = value;
            }
        }
        
        /// <remarks/>
        public string USUSENHACERTIFICADO {
            get {
                return this.uSUSENHACERTIFICADOField;
            }
            set {
                this.uSUSENHACERTIFICADOField = value;
            }
        }
        
        /// <remarks/>
        public bool USUIGNORAORIGEMFILA {
            get {
                return this.uSUIGNORAORIGEMFILAField;
            }
            set {
                this.uSUIGNORAORIGEMFILAField = value;
            }
        }
        
        /// <remarks/>
        public string USUPROFISSAO {
            get {
                return this.uSUPROFISSAOField;
            }
            set {
                this.uSUPROFISSAOField = value;
            }
        }
        
        /// <remarks/>
        public string USUTELEFONE {
            get {
                return this.uSUTELEFONEField;
            }
            set {
                this.uSUTELEFONEField = value;
            }
        }
        
        /// <remarks/>
        public string USUCPF {
            get {
                return this.uSUCPFField;
            }
            set {
                this.uSUCPFField = value;
            }
        }
        
        /// <remarks/>
        public bool USUPREVIEWDOC {
            get {
                return this.uSUPREVIEWDOCField;
            }
            set {
                this.uSUPREVIEWDOCField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GravarDocumentosDigitalizadosComObsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GravarDocumentosDigitalizadosCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GravarDocumentosDigitalizadosComEventoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GravarDocumentosDigitalizadosComHTTPCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GravarFolderCloudDocsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GravarFolderCloudDocsComComplementoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GravarFolderCloudDocsIndice10CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GravarFolderCloudDocsComTabelaTemporalidadeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConsultarTipoDocumentoCompletedEventHandler(object sender, ConsultarTipoDocumentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultarTipoDocumentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultarTipoDocumentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GravarFolderCloudDocsSemDocsCompletedEventHandler(object sender, GravarFolderCloudDocsSemDocsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GravarFolderCloudDocsSemDocsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GravarFolderCloudDocsSemDocsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GravarDocumentosDigitalizadosBotaoDireitoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GravarFolderParaIndexacaoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CriarPastaCompletedEventHandler(object sender, CriarPastaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CriarPastaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CriarPastaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscaTiposFolderesToTableCompletedEventHandler(object sender, BuscaTiposFolderesToTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscaTiposFolderesToTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscaTiposFolderesToTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscaTiposFolderesToTablePorUsuarioCompletedEventHandler(object sender, BuscaTiposFolderesToTablePorUsuarioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscaTiposFolderesToTablePorUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscaTiposFolderesToTablePorUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscaTiposFolderesDigitalizacaoCompletedEventHandler(object sender, BuscaTiposFolderesDigitalizacaoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscaTiposFolderesDigitalizacaoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscaTiposFolderesDigitalizacaoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscaClientesDoClientePorUsuarioCompletedEventHandler(object sender, BuscaClientesDoClientePorUsuarioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscaClientesDoClientePorUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscaClientesDoClientePorUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscaClientesDoClienteCompletedEventHandler(object sender, BuscaClientesDoClienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscaClientesDoClienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscaClientesDoClienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscaEventosCompletedEventHandler(object sender, BuscaEventosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscaEventosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscaEventosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscaTiposDocumentosCompletedEventHandler(object sender, BuscaTiposDocumentosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscaTiposDocumentosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscaTiposDocumentosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscarFoldesDocumentoCompletedEventHandler(object sender, BuscarFoldesDocumentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscarFoldesDocumentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscarFoldesDocumentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscarFoldesDocumentoByPaiCompletedEventHandler(object sender, BuscarFoldesDocumentoByPaiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscarFoldesDocumentoByPaiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscarFoldesDocumentoByPaiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscaClientesCompletedEventHandler(object sender, BuscaClientesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscaClientesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscaClientesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscaClientesCloudDocsCompletedEventHandler(object sender, BuscaClientesCloudDocsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscaClientesCloudDocsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscaClientesCloudDocsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ValidarUsuarioCompletedEventHandler(object sender, ValidarUsuarioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidarUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidarUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ValidarUsuarioADCompletedEventHandler(object sender, ValidarUsuarioADCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidarUsuarioADCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidarUsuarioADCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscarUsuarioCompletedEventHandler(object sender, BuscarUsuarioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscarUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscarUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public USUARIO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((USUARIO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscarUsuarioExternoCompletedEventHandler(object sender, BuscarUsuarioExternoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscarUsuarioExternoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscarUsuarioExternoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DOC_USUARIOEXTERNO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DOC_USUARIOEXTERNO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscaIntegracaoVirtualCompletedEventHandler(object sender, BuscaIntegracaoVirtualCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscaIntegracaoVirtualCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscaIntegracaoVirtualCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscaConfiguracaoSistemaCompletedEventHandler(object sender, BuscaConfiguracaoSistemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscaConfiguracaoSistemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscaConfiguracaoSistemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscaConfiguracaoClienteCompletedEventHandler(object sender, BuscaConfiguracaoClienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscaConfiguracaoClienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscaConfiguracaoClienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AdicionarClassificacaoCompletedEventHandler(object sender, AdicionarClassificacaoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdicionarClassificacaoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdicionarClassificacaoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AtualizaFolderProcessoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void VerificaArquivoCompletedEventHandler(object sender, VerificaArquivoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaArquivoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaArquivoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void VerificaArquivoFolderProcessoCompletedEventHandler(object sender, VerificaArquivoFolderProcessoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaArquivoFolderProcessoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaArquivoFolderProcessoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GravarFolderProcessoCompletedEventHandler(object sender, GravarFolderProcessoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GravarFolderProcessoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GravarFolderProcessoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscaLoteComProblemasCompletedEventHandler(object sender, BuscaLoteComProblemasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscaLoteComProblemasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscaLoteComProblemasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscaFluxoProcessoCompletedEventHandler(object sender, BuscaFluxoProcessoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscaFluxoProcessoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscaFluxoProcessoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConsultarFoldersCompletedEventHandler(object sender, ConsultarFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultarFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultarFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConsultarFoldersPorUsuarioCompletedEventHandler(object sender, ConsultarFoldersPorUsuarioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultarFoldersPorUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultarFoldersPorUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConsultarDocumentosFoldersCompletedEventHandler(object sender, ConsultarDocumentosFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultarDocumentosFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultarDocumentosFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConsultarObservacoesFoldersCompletedEventHandler(object sender, ConsultarObservacoesFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultarObservacoesFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultarObservacoesFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConsultaChaveTransferenciaCompletedEventHandler(object sender, ConsultaChaveTransferenciaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultaChaveTransferenciaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultaChaveTransferenciaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void VerificaTransferenciaArquivoCompletedEventHandler(object sender, VerificaTransferenciaArquivoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaTransferenciaArquivoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaTransferenciaArquivoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscaDigitalizadoraCompletedEventHandler(object sender, BuscaDigitalizadoraCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscaDigitalizadoraCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscaDigitalizadoraCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DOC_DIGITALIZADORA Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DOC_DIGITALIZADORA)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InserirDigitalizadoraCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void EnviarArquivoTemporarioCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void EnviarArquivoDataCaptureCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscarObjetosClienteUsuarioCompletedEventHandler(object sender, BuscarObjetosClienteUsuarioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscarObjetosClienteUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscarObjetosClienteUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscarObjetosClienteUsuarioPerfilCompletedEventHandler(object sender, BuscarObjetosClienteUsuarioPerfilCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscarObjetosClienteUsuarioPerfilCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscarObjetosClienteUsuarioPerfilCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscaSituacaoDocumentoCompletedEventHandler(object sender, BuscaSituacaoDocumentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscaSituacaoDocumentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscaSituacaoDocumentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void VerificaAtivacaoCompletedEventHandler(object sender, VerificaAtivacaoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaAtivacaoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaAtivacaoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscarLoteIndexacaoCompletedEventHandler(object sender, BuscarLoteIndexacaoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscarLoteIndexacaoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscarLoteIndexacaoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GravarFolderProcessoCQCompletedEventHandler(object sender, GravarFolderProcessoCQCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GravarFolderProcessoCQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GravarFolderProcessoCQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AtualizaSituacaoFolderProcessoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ListaFoldersProcessoFiltroCQCompletedEventHandler(object sender, ListaFoldersProcessoFiltroCQCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListaFoldersProcessoFiltroCQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListaFoldersProcessoFiltroCQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void EnviarArquivosCompletedEventHandler(object sender, EnviarArquivosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnviarArquivosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnviarArquivosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void VerificaServidorExternoCompletedEventHandler(object sender, VerificaServidorExternoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaServidorExternoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaServidorExternoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BuscarMeusDocumetosCompletedEventHandler(object sender, BuscarMeusDocumetosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuscarMeusDocumetosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuscarMeusDocumetosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CadastrarAlertaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConsultaPermissoesCompletedEventHandler(object sender, ConsultaPermissoesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultaPermissoesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultaPermissoesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConsultarAssinaturasCompletedEventHandler(object sender, ConsultarAssinaturasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultarAssinaturasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultarAssinaturasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConsultarSolicitacaoDocumentoAbertaCompletedEventHandler(object sender, ConsultarSolicitacaoDocumentoAbertaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultarSolicitacaoDocumentoAbertaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultarSolicitacaoDocumentoAbertaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void MultiplasAssinaturasCompletedEventHandler(object sender, MultiplasAssinaturasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MultiplasAssinaturasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MultiplasAssinaturasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConsultarAreasAssinaturasCompletedEventHandler(object sender, ConsultarAreasAssinaturasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultarAreasAssinaturasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultarAreasAssinaturasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConsultarDocumentoCompletedEventHandler(object sender, ConsultarDocumentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultarDocumentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultarDocumentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CriarNovaVersaoAssinaturaCompletedEventHandler(object sender, CriarNovaVersaoAssinaturaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CriarNovaVersaoAssinaturaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CriarNovaVersaoAssinaturaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConsultarClienteCompletedEventHandler(object sender, ConsultarClienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultarClienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultarClienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConsultarListaGenericaCompletedEventHandler(object sender, ConsultarListaGenericaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultarListaGenericaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultarListaGenericaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConsultarTabelaTemporaridadeCompletedEventHandler(object sender, ConsultarTabelaTemporaridadeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultarTabelaTemporaridadeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultarTabelaTemporaridadeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591